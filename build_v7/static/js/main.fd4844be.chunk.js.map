{"version":3,"sources":["assets/instant_information.svg","assets/completed_steps.svg","context/GlobalContext.js","components/BlueCheckbox/index.js","components/AlertMessage/index.js","utils/index.js","services/api.js","constants/index.js","routes/index.js","pages/LoginPage/index.js","pages/QuestionnairePage/context/QuestionnaireContext.js","pages/QuestionnairePage/components/QuestionnaireList/CreateQuestionnaire.js","components/Dialog/index.js","pages/QuestionnairePage/components/QuestionnaireList/ShowUnavailableQuestionnaire.js","pages/QuestionnairePage/components/QuestionnaireList/index.js","pages/QuestionnairePage/context/QuestionContext.js","pages/QuestionnairePage/components/RightPanel/Add.js","pages/QuestionnairePage/components/RightPanel/ChangeAnswerType.js","pages/QuestionnairePage/components/RightPanel/DuplicateQuestionnaire.js","pages/QuestionnairePage/components/RightPanel/show.js","pages/QuestionnairePage/components/RightPanel/index.js","pages/QuestionnairePage/index.js","pages/EvaluationManagerPage/context/AssessmentContext.js","pages/EvaluationManagerPage/components/AssessmentsList/index.js","pages/EvaluationManagerPage/components/RightPanel/show/ShowEvaluators.js","pages/EvaluationManagerPage/components/RightPanel/show/BoardRounded.js","pages/EvaluationManagerPage/components/RightPanel/show/ShowQuestionnaire.js","pages/EvaluationManagerPage/components/RightPanel/show/ShowTasks.js","pages/EvaluationManagerPage/components/RightPanel/show/EvaluationHistory.js","pages/EvaluationManagerPage/components/RightPanel/show/ShowGeneral.js","components/Tabs/index.js","pages/EvaluationManagerPage/components/RightPanel/show/index.js","pages/EvaluationManagerPage/context/CreateAssessmentContext.js","components/ListItemDefault/index.js","components/Button/index.js","pages/EvaluationManagerPage/components/RightPanel/CreateEvaluation/AddEvaluator.js","pages/EvaluationManagerPage/components/RightPanel/CreateEvaluation/index.js","pages/EvaluationManagerPage/components/RightPanel/index.js","pages/EvaluationManagerPage/index.js","pages/WebsitesPage/context/WebsiteContext.js","pages/WebsitesPage/components/WebsiteList/create.js","pages/WebsitesPage/components/WebsiteList/index.js","pages/WebsitesPage/context/TaskContext.js","pages/WebsitesPage/components/RightPanel/createPage.js","pages/WebsitesPage/components/RightPanel/createTask.js","pages/WebsitesPage/components/RightPanel/index.js","pages/WebsitesPage/index.js","components/layouts/Header.js","pages/index.js","App.js","serviceWorker.js","index.js","assets/select_website.svg"],"names":["module","exports","GlobalContext","createContext","GlobalContextProvider","children","value","managerController","useState","Provider","BlueCheckbox","withStyles","root","color","className","props","FormControlLabel","control","Checkbox","label","AlertPopup","open","type","other","Collapse","in","variant","severity","validateEmail","email","test","String","toLowerCase","validateUrl","url","validateName","name","min","length","split","api","axios","create","baseURL","RUNTIME_ERROR","CANCEL","SUCCESS","loginManager","store","Promise","res","rej","a","async","post","response","data","status","docs","storeEvaluation","storeQuestionnaire","storeWebsite","loadTasksByEvaluation","loadPathTask","loadEvaluatorsByEvaluation","loadEvaluatorsByEmail","source","CancelToken","cancelToken","token","isCancel","id","detail","loadDesignersByEmail","loadQuestionnairesByManager","loadEvaluationsByManager","loadWebsitesByManager","loadTasksByWebsite","loadQuestionsByQuestionnaire","loadEvaluatorsByProfile","loadProfiles","duplicateQuestionnaire","showQuestionnaire","loadTaskPathByUserAndTask","validatePassword","password","max","str","Tab","selected","classes","makeStyles","theme","tab","fontSize","backgroundColor","cursor","padding","spacing","palette","grey","marginTop","borderRadius","transition","useStyles","title","form","width","textfield","margin","actions","display","justifyContent","alignItems","action","textDecoration","button","border","outline","transform","LoginForm","handleRegisterDisplay","showPassword","setShowPassword","remember","setRemember","setEmail","setPassword","errors","setErrors","useContext","manager","setManager","TextField","required","fullWidth","onChange","event","target","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","prev","alert","AlertMessage","style","join","preventDefault","push","withoutErrors","then","json","localStorage","setItem","JSON","stringify","catch","error","Number","finally","checked","RegisterForm","handleLoginDisplay","setName","LoginPage","container","maxHeight","blue","height","white","welcome","marginLeft","fontWeight","alignSelf","tabs","flexDirection","setDisplay","useEffect","parse","getItem","Grid","item","sm","md","QuestionnaireContext","QuestionnaireProvider","questionnaireController","DialogTitle","closeButton","right","top","onClose","disableTypography","Typography","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CreateQuestionnaire","handleClose","currentQuestionnaire","setCurrentQuestionnaire","setDetail","Dialog","dividers","marginBottom","gutterBottom","Button","autoFocus","validName","manager_id","noWrap","DefaultDialog","submit","submitText","maxWidth","content","overFlowY","ShowUnavailableQuestionnaire","questionnaire","AvailableQuestionnaireItem","ListItem","ListItemText","primary","secondary","UnavailableQuestionnaireItem","openDialog","setOpenDialog","setOpen","handleClickOpen","ListItemSecondaryAction","edge","Add","QuestionnaireList","availableQuestionnaires","setAvailableQuestionnaires","unavailableQuestionnaires","setUnavailableQuestionnaires","available","unavailable","List","component","overflowY","map","key","QuestionContext","QuestionProvider","answerTypes","setAnswerTypes","criteria","setCriteria","loadAnswerTypes","loadCriteria","QuestionItem","question","addQuestion","removeQuestion","light","formControl","elements","element","main","setChecked","answerType","setAnserType","criterion","text","FormControl","InputLabel","Select","labelId","index","MenuItem","element_1_id","element_1","element_2_id","element_2","AddQuestion","oldQuestions","questions","setQuestions","selecteds","setSelecteds","filterQuestions","newQuestions","oldIds","q","filter","includes","handleChangeCriterion","loadQuestions","Autocomplete","autoHighlight","options","getOptionLabel","newValue","renderInput","params","FormGroup","attach","answer_type_id","detach","ChangeAnswerType","background","paper","secondaryAction","success","dark","handleClick","question_id","questionnaire_id","DuplicateQuestionnaire","setQuestionnaire","QuestionHeader","card","contrastText","Card","CardContent","align","reload","remove","change","duplicate","openChangeDialog","setOpenChangeDialog","answer_type_name","CardActions","window","confirm","save","icon","marginRight","Paper","Actions","openDuplicateDialog","setOpenDuplicateDialog","size","ShowQuestions","header","RightPane","svg","link","src","SelectWebsiteSvg","alt","PanelQuestionnaires","list","AssessmentContext","AssessmentProvider","state","currentAssessmentController","viewController","AssessmentItem","assessment","currentAssessment","setCurrentAssessment","view","setView","CreateAssessment","handleAddAssessment","AssessmentList","assessments","setAssessments","listRoot","containerProfile","personIcon","Profile","evaluator","ShowEvaluators","evaluators","setEvaluators","setEvaluator","Fragment","handleSelectEvaluator","ListItemAvatar","Avatar","boxShadow","BoardRounded","others","clsx","listContainer","left","ShowQuestionnaire","setSelected","handleSelectQuestion","designerListContainer","evaluatorListContainer","footer","matchesButton","doesnotMatchesButton","SelectStyled","input","InputBase","getQuestionsToSend","path","evaluation","questions_to_send","forEach","page","element_3_id","element_4_id","element_5_id","Object","values","DialogQuestionsToSend","handleCloseDialog","copied","setCopied","csv","setCsv","questionsToSend","_","i","getQuestions","onCopy","Tooltip","placement","ListItemIcon","DialogAddRoute","task_id","evaluator_id","pages","setPages","selectedPages","setSelectedPages","loadPages","website","loadPagesByWebsite","handleRemovePage","oldPage","prevPages","console","log","newPage","ShowTaks","tasks","setTasks","taskId","setTaskId","taskPath","setTaskPath","evaluatorId","setEvaluatorId","taskPathUser","setTaskPathUser","openDialogUser","setOpenDialogUser","handleOpenDialog","loadUserPath","page_id","getEvaluatorTaskPath","displayEmpty","disabled","task","subheader","ListSubheader","renderValue","find","Math","random","startIcon","history","footerContent","History","date","EvaluationHistory","endIcon","panel","pizza","pizzaTitle","textAlign","about","CircularProgressWithLabel","Box","CircularProgress","bottom","round","CompletedTasks","Link","QuestionsAnswered","ShowGeneral","flexGrow","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","textTransform","typography","fontWeightRegular","pxToRem","opacity","disableRipple","TabsComponent","handleChange","centered","indicatorColor","aria-label","a11yProps","containerRoot","ShowEvaluationPanel","controller","setValue","getPanel","SelectAssessmentSvg","CreateAssessmentContext","CreateAssessmentProvider","detailsController","tasksController","userListController","ListItemDefault","tooltipText","primaryText","secondaryText","active","onClicksecondaryAction","iconSecondaryAction","arrow","rest","loading","CreateEvaluator","createEvaluator","profiles","setProfiles","profiles_ids","profile","onSubmit","e","newProfile","handleClickProfile","AddEvaluation","handleAdd","query","setQuery","setLoading","openCreateEvaluator","setOpenCreateEvaluator","handleOpenCreateEvaluator","validateEvaluator","handleChangeEvaluator","Divider","AssessmentDetails","details","setDetails","multiline","rows","ChooseQuestionnaire","ListQuestionnaires","selectedQuestionnaire","setSelectedQuestionnaire","questionnaires","setQuestionnaires","handleSelectQuestionnaire","ListQuestions","ChooseTasks","setWebsite","currentWebsite","WebsiteList","websites","setWebsites","handleSelectWebsite","TaskItem","selectedTask","TaskList","website_id","ChooseGroups","chip","chipAdd","selectedProfiles","setSelectedProfiles","userList","setUserList","openAddEvaluator","setOpenAddEvaluator","union","oldUsers","newUsers","newProfile_id","profile_ids","count","Infinity","user","oldUsersIds","newUsersIds","A","B","AB","handleSelectetProfile","handleRemoveProfile","oldProfile","clearOnEscape","Chip","onDelete","oldUser","newUser","some","Confimation","CreateEvaluation","step","backButton","instructions","finalText","finalContainer","image","buttons","currentEvaluation","setCurrentEvaluation","conditions","undefined","activeStep","setActiveStep","steps","handleNext","prevActiveStep","Boolean","message","dataSnackbar","setDataSnackbar","handleOpenSnackbar","handleCloseSnackbar","Stepper","alternativeLabel","Step","StepLabel","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","elevation","CompletedStepsSvg","stepIndex","getStepContent","tasks_id","evaluators_id","RightPanel","PanelAssessments","WebsiteContext","WebsiteProvider","websiteController","CreateDesigner","createDesigner","CreateWebsite","setCurrentWebsite","setUrl","designers","setDesigners","designer","setDesigner","openCreateDesigner","setOpenCreateDesigner","handleOpenCreateDesigner","handleCloseCreateDesigner","validDesigner","designer_id","handleChangeDesigner","WebsiteItem","TaskContext","TaskProvider","taskController","pagesController","newPageAddController","newTaskAddController","CreatePage","newPageAdd","setNewPageAdd","selectedElements","setSelectedElements","setElements","loadElements","handleRemoveElement","validEments","elements_id","storePage","CreateTask","currentTask","setCurrentTask","TaskAdd","TaskItemAvailble","TaskItemUnavailable","newTaskAdd","setNewTaskAdd","availableTasks","setAvailableTasks","unavailableTasks","setUnvailableTasks","loadTasks","useCallback","PageAdd","PageItem","selectedsPages","setSelectedsPages","PageList","TaskHeader","RouteItem","filteredPages","selectedPage","Constructor","loadPagesRoute","syncNewPages","storeTask","gridContainer","gridItem","borderRight","borderBottom","borderBottomColor","PanelWebsites","Header","setPage","gridArea","menuButton","AppBar","anchorEl","setAnchorEl","handleCloseMenu","Toolbar","currentTarget","Menu","keepMounted","removeItem","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","Pages","pageName","showPage","createMuiTheme","indigo","fontFamily","location","hostname","match","ReactDOM","render","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd4844be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/instant_information.7da78e06.svg\";","module.exports = __webpack_public_path__ + \"static/media/completed_steps.315809f6.svg\";","import React, { useState, createContext } from 'react';\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nexport default function GlobalContextProvider({ children }) {\r\n  \r\n  const managerController = useState({});\r\n\r\n  const value = {\r\n    managerController\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider value={value}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst BlueCheckbox = withStyles({\r\n  root: {\r\n    color: '#22ACF0',\r\n  }\r\n})(({children, className, ...props}) => \r\n  <FormControlLabel \r\n    className={className}\r\n    control={<Checkbox color=\"default\" {...props} />} \r\n    label={children} \r\n  />\r\n);\r\n\r\nexport default BlueCheckbox;\r\n","import React from 'react';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst AlertPopup = ({ open, type, children, ...other }) => {\r\n  return (\r\n    <Collapse in={open} {...other}>\r\n      <Alert variant=\"filled\" severity={type}>\r\n        {children}\r\n      </Alert>\r\n    </Collapse>\r\n  )\r\n}\r\n\r\nexport default AlertPopup;\r\n","export const validateEmail = (email) => {\r\n  const reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return reg.test(String(email).toLowerCase());\r\n}\r\n\r\nexport const validateUrl = (url) => {\r\n  const reg = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!$&'()*+,;=.]+$/g;\r\n  return reg.test(String(url).toLowerCase());\r\n}\r\n\r\nexport const validateName = (name, min) => {\r\n  if(name.length < min) {\r\n    return false;\r\n  }\r\n\r\n  const names = name.split(' ');\r\n\r\n  if(names.length < 2) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport const strBetween = (str, min, max) => {\r\n  return str.length >= min && str.length <= max;\r\n}\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({ baseURL: 'http://joinsoft.com.br/coinspect/api/'});\r\n\r\nexport default api;","export const RUNTIME_ERROR = 0;\r\n\r\nexport const STORE_ERROR = 1;\r\n\r\nexport const DUPLICATE_EMAIL = 2;\r\n\r\nexport const CANCEL = 10;\r\n\r\nexport const SUCCESS = 'success';\r\n\r\nexport const ERROR = 'error';","import api from '../services/api';\r\nimport axios from 'axios';\r\nimport { STORE_ERROR, RUNTIME_ERROR, CANCEL, SUCCESS } from '../constants';\r\n\r\nexport const storeManager = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/managers/store.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const loginManager = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/managers/login.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const storeEvaluation = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/assessments/store.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const storeQuestionnaire = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/questionnaires/store.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const storeDesigner = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/designers/store.php', store);\r\n    \r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const storeEvaluator = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/evaluators/store.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const storeWebsite = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/websites/store.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const loadTasksByEvaluation = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/assessments/tasks.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const loadPathTask = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/tasks/pages.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const loadEvaluatorsByEvaluation = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/assessments/evaluators.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const loadEvaluatorsByEmail = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const source = axios.CancelToken.source();\r\n\r\n    try {\r\n      const response = await api.post('/evaluators/search.php', { ...store, cancelToken: source.token });\r\n\r\n      const { data } = response;\r\n      if(data.status === SUCCESS) {\r\n        res(data.docs);\r\n      } else {\r\n        rej(data.docs);\r\n      }\r\n    } catch(error) {\r\n      if(axios.isCancel(error)) {\r\n        rej({ id: CANCEL, detail: 'Canceled by token' });\r\n      } else {\r\n        rej({ id: RUNTIME_ERROR, detail: 'Error on load designers' });\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const loadDesignersByEmail = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const source = axios.CancelToken.source();\r\n\r\n    try {\r\n      const response = await api.post('/designers/search.php', { ...store, cancelToken: source.token });\r\n\r\n      const { data } = response;\r\n      if(data.status === SUCCESS) {\r\n        res(data.docs);\r\n      } else {\r\n        rej(data.docs);\r\n      }\r\n    } catch(error) {\r\n      if(axios.isCancel(error)) {\r\n        rej({ id: CANCEL, detail: 'Canceled by token' });\r\n      } else {\r\n        rej({ id: RUNTIME_ERROR, detail: 'Error on load designers' });\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const loadQuestionnairesByManager = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/managers/questionnaires.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const loadEvaluationsByManager = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/managers/assessments.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const loadWebsitesByManager = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/managers/websites.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const loadTasksByWebsite = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/websites/tasks.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const loadQuestionsByQuestionnaire = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/questionnaires/questions.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const loadEvaluatorsByProfile = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/profiles/evaluators.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const loadProfiles = () => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/profiles/index.php');\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const duplicateQuestionnaire = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/questionnaires/duplicate.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej({ id: STORE_ERROR, detail: 'Error on duplicate questionnaire'});\r\n    }\r\n  });\r\n}\r\n\r\nexport const showQuestionnaire = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/questionnaires/show.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const showQuestion = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n    const response = await api.post('/questions/show.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const showEvaluation = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n\r\n    const response = await api.post('/assessments/show.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const showWebsiteByEvaluation = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n\r\n    const response = await api.post('/assessments/website.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const loadPagesByWebsite = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n\r\n    const response = await api.post('/websites/pages.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const loadTaskPathByUserAndTask = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n\r\n    const response = await api.post('/tasks/pages_user.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n\r\nexport const storeEvaluatorPathTask = (store) => {\r\n  return new Promise(async (res, rej) => {\r\n\r\n    console.log(store)\r\n\r\n    const response = await api.post('/tasks/sync_user.php', store);\r\n\r\n    const { data } = response;\r\n    if(data.status === SUCCESS) {\r\n      res(data.docs);\r\n    } else {\r\n      rej(data.docs);\r\n    }\r\n  });\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\n// Material-ui imports\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Context Imports\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\n\r\n// Components Imports\r\nimport BlueCheckbox from '../../components/BlueCheckbox';\r\nimport AlertMessage from '../../components/AlertMessage';\r\n\r\n// Utils Imports\r\nimport { strBetween, validateEmail, validateName } from '../../utils';\r\nimport { storeManager, loginManager } from '../../routes';\r\nimport { RUNTIME_ERROR } from '../../constants';\r\n\r\nconst validatePassword = (password) => strBetween(password, 8, 32);\r\n\r\nconst Tab = ({ selected, children, ...other }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    tab: {\r\n      fontSize: 16,\r\n      backgroundColor: selected ? '#FFFFFF' : 'transparent',\r\n      cursor: 'pointer',\r\n      padding: theme.spacing(2, 4, 2, 2),\r\n      color: theme.palette.grey[700],\r\n      marginTop: theme.spacing(2),\r\n      borderRadius: theme.spacing(2, 0, 0, 2),\r\n      transition: 'background-color .3s',\r\n      '&:hover': {\r\n        backgroundColor: 'white'\r\n      }\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span className={classes.tab} {...other}>{children}</span>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    color: '#22ACF0',\r\n    fontSize: 36\r\n  },\r\n  form: {\r\n    width: '80%'\r\n  },\r\n  textfield: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1)\r\n  },\r\n  action: {\r\n    color: '#22ACF0',\r\n    textDecoration: 'none',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      textDecoration: 'underline'\r\n    }\r\n  },\r\n  button: {\r\n    backgroundColor: '#22ACF0',\r\n    border: 'none',\r\n    borderRadius: 32,\r\n    color: 'white',\r\n    padding: theme.spacing(3),\r\n    marginTop: theme.spacing(2),\r\n    width: '100%',\r\n    cursor: 'pointer',\r\n    fontSize: 18,\r\n    transition: 'all .3s ease-in-out',\r\n    outline: 'none',\r\n    '&:hover': {\r\n      transform: 'scale(1.05)',\r\n    }\r\n  }\r\n}));\r\n\r\nconst LoginForm = ({ handleRegisterDisplay }) => {\r\n\r\n  const [showPassword, setShowPassword]  = useState(false);\r\n  const [remember, setRemember] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const { managerController } = useContext(GlobalContext);\r\n  const [ manager, setManager ] = managerController;\r\n\r\n  const handleChangeRemember = (event) => {\r\n    const { checked } = event.target;\r\n    setRemember(checked);\r\n  }\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(prev => !prev);\r\n  }\r\n\r\n  const handleChangeEmail = event => {\r\n    const { value: email } = event.target;\r\n    email.length <= 150 && setEmail(email);\r\n  }\r\n\r\n  const handleChangePassword = event => {\r\n    const { value: password } = event.target;\r\n    password.length <= 32 && setPassword(password);\r\n  }\r\n\r\n  const withoutErrors = () => {\r\n    const errors = [];\r\n    if(!validateEmail(email)) {\r\n      errors.push('Please enter a valid email');\r\n    }\r\n    if(!validatePassword(password)) {\r\n      errors.push('Please enter a password between 8 to 32 characters')\r\n    }\r\n    setErrors(errors);\r\n    return errors.length === 0;\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(withoutErrors()) {\r\n      loginManager({\r\n        email, password\r\n      }).then(json => {\r\n\r\n        if(remember) {\r\n          localStorage.setItem('manager_data', JSON.stringify({\r\n            email: json.email,\r\n            password: json.password\r\n          }))\r\n        }\r\n\r\n        if(manager.id !== json.id) {\r\n          setManager(json);\r\n        }\r\n\r\n      }).catch(error => {\r\n\r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          setErrors([error.detail]);\r\n          return;\r\n        }\r\n\r\n        alert('error');\r\n      }).finally(() => {\r\n\r\n        // Finnaly\r\n      });\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.form}>\r\n      <span className={classes.title}>Co-Inspect Tool</span>\r\n      <TextField \r\n        id=\"email\" \r\n        required\r\n        className={classes.textfield}\r\n        label=\"Email\" \r\n        value={email}\r\n        fullWidth\r\n        onChange={handleChangeEmail}\r\n      />\r\n      <TextField \r\n        id=\"password\" \r\n        required\r\n        className={classes.textfield}\r\n        label=\"Password\" \r\n        type={showPassword ? 'text' : 'password'}\r\n        InputProps={{ endAdornment: \r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              onClick={handleClickShowPassword}\r\n            >\r\n              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>,\r\n        }}\r\n        value={password}\r\n        fullWidth\r\n        onChange={handleChangePassword}\r\n      />\r\n      <span onClick={() => alert('WIP')} className={classes.action}>\r\n        Forgot password?\r\n      </span>\r\n      <AlertMessage type=\"error\" open={errors.length > 0} style={{ marginTop: 8 }}>\r\n        {errors.join('.\\n')}\r\n      </AlertMessage>\r\n      <button onClick={handleSubmit} className={classes.button}>\r\n        Login\r\n      </button>\r\n      <div className={classes.actions}>\r\n        <BlueCheckbox onChange={handleChangeRemember} checked={remember}>\r\n          Remember me\r\n        </BlueCheckbox>\r\n        <span onClick={handleRegisterDisplay} className={classes.action}>\r\n          Not registered yet?\r\n        </span>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst RegisterForm = ({ handleLoginDisplay }) => {\r\n\r\n  const [showPassword, setShowPassword]  = useState(false);\r\n  const [remember, setRemember] = useState(true);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const { managerController } = useContext(GlobalContext);\r\n  const [ manager, setManager ] = managerController;\r\n\r\n  const handleChangeRemember = (event) => {\r\n    const { checked } = event.target;\r\n    setRemember(checked);\r\n  }\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(prev => !prev);\r\n  }\r\n\r\n  const handleChangeName = event => {\r\n    const { value: name } = event.target;\r\n    name.length <= 100 && setName(name);\r\n  }\r\n\r\n  const handleChangeEmail = event => {\r\n    const { value: email } = event.target;\r\n    email.length <= 150 && setEmail(email);\r\n  }\r\n\r\n  const handleChangePassword = event => {\r\n    const { value: password } = event.target;\r\n    password.length <= 32 && setPassword(password);\r\n  }\r\n\r\n  const withoutErrors = () => {\r\n    const errors = [];\r\n    if(!validateName(name)) {\r\n      errors.push('Please enter first and last name');\r\n    }\r\n    if(!validateEmail(email)) {\r\n      errors.push('Please enter a valid email')\r\n    }\r\n    if(!validatePassword(password)) {\r\n      errors.push('Please enter a password between 8 to 32 characters')\r\n    }\r\n    setErrors(errors);\r\n    return errors.length === 0;\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(withoutErrors()) {\r\n      storeManager({\r\n        name, email, password\r\n      }).then(json => {\r\n\r\n        if(remember) {\r\n          localStorage.setItem('manager_data', JSON.stringify({\r\n            email: json.email,\r\n            password: json.password\r\n          }))\r\n        }\r\n\r\n        if(manager.id !== json.id) {\r\n          setManager(json);\r\n        }\r\n\r\n      }).catch(error => {\r\n\r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          setErrors([error.detail]);\r\n          return;\r\n        }\r\n\r\n        alert('error');\r\n      }).finally(() => {\r\n\r\n        // Finnaly\r\n      });\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.form}>\r\n      <span className={classes.title}>Co-Inspect Tool</span>\r\n      <TextField \r\n        id=\"name\" \r\n        required\r\n        className={classes.textfield}\r\n        label=\"Name\" \r\n        value={name}\r\n        fullWidth\r\n        onChange={handleChangeName}\r\n      />\r\n      <TextField \r\n        id=\"email\" \r\n        required\r\n        className={classes.textfield}\r\n        label=\"Email\" \r\n        value={email}\r\n        fullWidth\r\n        onChange={handleChangeEmail}\r\n      />\r\n      <TextField \r\n        id=\"password\" \r\n        required\r\n        className={classes.textfield}\r\n        label=\"Password\" \r\n        type={showPassword ? 'text' : 'password'}\r\n        InputProps={{ endAdornment: \r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              onClick={handleClickShowPassword}\r\n            >\r\n              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>,\r\n        }}\r\n        value={password}\r\n        fullWidth\r\n        onChange={handleChangePassword}\r\n      />\r\n      <AlertMessage type=\"error\" open={errors.length > 0} style={{ marginTop: 8 }}>\r\n        {errors.join('.\\n')}\r\n      </AlertMessage>\r\n      <button onClick={handleSubmit} className={classes.button}>\r\n        Register\r\n      </button>\r\n      <div className={classes.actions}>\r\n        <BlueCheckbox onChange={handleChangeRemember} checked={remember}>\r\n          Remember me\r\n        </BlueCheckbox>\r\n        <span onClick={handleLoginDisplay} className={classes.action}>\r\n          Already registered?\r\n        </span>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default function LoginPage() {\r\n  const useStyles = makeStyles(theme => ({\r\n    container: {\r\n      maxHeight: '100vh'\r\n    },\r\n    blue: {\r\n      justifyContent: 'space-between',\r\n      backgroundColor: '#22ACF0',\r\n      color: '#FFFFFF',\r\n      display: 'flex',\r\n      height: '100vh',\r\n    },\r\n    white: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: '#FFFFFF',\r\n    },\r\n    welcome: {\r\n      marginLeft: theme.spacing(8),\r\n      fontWeight: 'lighter',\r\n      alignSelf: 'center',\r\n      fontSize: 24,\r\n    },\r\n    tabs: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      marginTop: theme.spacing(4),\r\n    }\r\n  }));\r\n\r\n  const [display, setDisplay] = useState('login');\r\n\r\n  const { managerController } = useContext(GlobalContext);\r\n  const [ manager, setManager ] = managerController;\r\n\r\n  const handleLoginDisplay = () => {\r\n    if(display !== 'login') {\r\n      setDisplay('login');\r\n    }\r\n  }\r\n\r\n  const handleRegisterDisplay = () => {\r\n    if(display !== 'register') {\r\n      setDisplay('register');\r\n    }\r\n  }\r\n\r\n\r\n  // try auto login\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem('manager_data'));\r\n    \r\n    if(!data) {\r\n      return;\r\n    }\r\n\r\n    if(!data.email || !data.password) {\r\n      return;\r\n    }\r\n\r\n    loginManager(data).then(json => {\r\n\r\n      setManager(json);\r\n\r\n    }).catch(error => {\r\n\r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n        return;\r\n      }\r\n\r\n      alert('error');\r\n    }).finally(() => {\r\n\r\n      // Finnaly\r\n    });\r\n  }, [manager, setManager]);\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid className={classes.container} container>\r\n      <Grid className={classes.blue} item sm={12} md={8}>\r\n        <div className={classes.welcome}>\r\n          <span style={{ fontSize: 22 }}>Welcome to</span>\r\n          <h1>Co-Inspect Tool</h1>\r\n          <p style={{ fontSize: 18 }}>A computerized tool designed to support usability assessments of web sites using checklists and which aims to present quantitative results about the usability characteristics of the web site with a focus on monitoring environments for biodiversity, climate change and seasonal diseases.</p>\r\n        </div>\r\n        <div className={classes.tabs}>\r\n          <Tab onClick={handleLoginDisplay} selected={display === 'login'}>\r\n            Login\r\n          </Tab>\r\n          <Tab onClick={handleRegisterDisplay} selected={display === 'register'}>\r\n            Register\r\n          </Tab>\r\n        </div>\r\n      </Grid>\r\n      <Grid className={classes.white} item sm={12} md={4}>\r\n        {display === 'login' ? (\r\n          <LoginForm handleRegisterDisplay={handleRegisterDisplay}  />\r\n        ) : (\r\n          <RegisterForm handleLoginDisplay={handleLoginDisplay} />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const QuestionnaireContext = createContext();\r\n\r\nexport default function QuestionnaireProvider({ children }) {\r\n  \r\n  const questionnaireController = useState({});\r\n\r\n  const value = {\r\n    questionnaireController\r\n  }\r\n\r\n  return (\r\n    <QuestionnaireContext.Provider value={value}>\r\n      {children}\r\n    </QuestionnaireContext.Provider>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { QuestionnaireContext } from '../../context/QuestionnaireContext';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nimport { storeQuestionnaire } from '../../../../routes';\r\nimport { GlobalContext } from '../../../../context/GlobalContext';\r\nimport { RUNTIME_ERROR } from '../../../../constants';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CreateQuestionnaire({ open, handleClose }) {\r\n  const { questionnaireController } = useContext(QuestionnaireContext);\r\n  const [currentQuestionnaire, setCurrentQuestionnaire] = questionnaireController;\r\n\r\n  const { managerController } = useContext(GlobalContext);\r\n  const [ manager ] = managerController;\r\n\r\n  const [name, setName] = useState('');\r\n  const [detail, setDetail] = useState('');\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const validName = name => name.length >= 3 ? true : false;\r\n\r\n  const handleChageName = event => {\r\n    const { value } = event.target;\r\n    value.length <= 100 && setName(value);\r\n  }\r\n\r\n  const handleDetail = event => {\r\n    const { value } = event.target;\r\n    value.length <= 300 && setDetail(value);\r\n  }\r\n\r\n  const withoutErrors = () => {\r\n    const errors = [];\r\n    if(!validName(name)) {\r\n      errors.push('Please enter a name with at least 3 characters')\r\n    }\r\n    setErrors(errors);\r\n    return errors.length === 0;\r\n  }\r\n\r\n  const submit = () => {\r\n    if(withoutErrors()) {\r\n      storeQuestionnaire({\r\n        name, \r\n        detail,\r\n        manager_id: Number(manager.id)\r\n      }).then(json => {\r\n  \r\n        setCurrentQuestionnaire(json);\r\n      }).catch(error => {\r\n  \r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          alert(error.detail);\r\n          return;\r\n        }\r\n  \r\n        alert('error');\r\n      }).finally(() => {\r\n  \r\n        handleClose();\r\n        setName('');\r\n        setDetail('');\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} fullWidth>\r\n      <DialogTitle onClose={handleClose}>\r\n        Add Questionnaire\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        {currentQuestionnaire.id && (\r\n          <Alert\r\n            variant=\"filled\"\r\n            severity=\"warning\"\r\n            style={{ marginBottom: 10 }}\r\n          >\r\n            Make sure the changes to the website \"{currentQuestionnaire.name}\" have been saved\r\n          </Alert>\r\n        )}\r\n        <Collapse in={errors.length > 0}>\r\n          <Alert \r\n            variant=\"filled\"\r\n            severity=\"error\"\r\n          >\r\n            {errors.join(', ')}\r\n          </Alert>\r\n        </Collapse>\r\n        <Typography style={{ marginTop: 10 }} gutterBottom> Questionnaire Name </Typography>\r\n        <TextField \r\n          id=\"name\" \r\n          label=\"ex: USP Questionnaire\" \r\n          variant=\"outlined\"\r\n          value={name}\r\n          fullWidth\r\n          onChange={handleChageName}\r\n        />\r\n        <Typography style={{ marginTop: 10 }} gutterBottom> Questionnaire Detail </Typography>\r\n        <TextField \r\n          id=\"detail\" \r\n          label=\"ex: Questionnaire Detail\" \r\n          variant=\"outlined\"\r\n          type=\"detail\"\r\n          value={detail}\r\n          fullWidth\r\n          onChange={handleDetail}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button \r\n          autoFocus \r\n          color=\"primary\"\r\n          onClick={submit}\r\n        >\r\n          Add Questionnaire\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\" noWrap>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function DefaultDialog({ \r\n  handleClose,\r\n  title,\r\n  children,\r\n  submit,\r\n  submitText,\r\n  maxWidth\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    content: {\r\n      maxHeight: '80vh',\r\n      overFlowY: 'auto',\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open\r\n      fullWidth\r\n      onClose={handleClose}  \r\n      maxWidth={maxWidth || 'lg'}\r\n    >\r\n      <DialogTitle onClose={handleClose}>{title}</DialogTitle>\r\n      <DialogContent className={classes.content} dividers>{children}</DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        {submit && (\r\n          <Button \r\n            autoFocus \r\n            color=\"primary\"\r\n            onClick={submit}\r\n          >\r\n            {submitText || 'submit'}\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport Dialog from '../../../../components/Dialog';\r\n\r\nexport default function ShowUnavailableQuestionnaire({ handleClose, questionnaire }) {\r\n  return (\r\n    <Dialog\r\n      title={questionnaire.name + \" - The questionnaire is being used by an evaluation\"}\r\n      handleClose={handleClose}\r\n      fullWidth\r\n    >\r\n      \r\n    </Dialog>\r\n  )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport CreateQuestionnaireDialog from './CreateQuestionnaire';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Add as AddIcon } from '@material-ui/icons';\r\n\r\nimport ShowUnavailableQuestionnaire from './ShowUnavailableQuestionnaire';\r\nimport { QuestionnaireContext } from '../../context/QuestionnaireContext';\r\nimport { loadQuestionnairesByManager } from '../../../../routes';\r\nimport { GlobalContext } from '../../../../context/GlobalContext';\r\nimport { RUNTIME_ERROR } from '../../../../constants';\r\n\r\nconst AvailableQuestionnaireItem = ({ questionnaire }) => {\r\n  const { questionnaireController } = useContext(QuestionnaireContext);\r\n  const [currentQuestionnaire, setCurrentQuestionnaire] = questionnaireController;\r\n\r\n  const handleCurrentQuestionnaire = () => {\r\n    setCurrentQuestionnaire(questionnaire);\r\n  }\r\n\r\n  return (\r\n    <ListItem\r\n      button \r\n      onClick={handleCurrentQuestionnaire}\r\n      selected={questionnaire === currentQuestionnaire}\r\n    >\r\n      <ListItemText \r\n        primary={questionnaire.name}\r\n        secondary={questionnaire.detail}\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nconst UnavailableQuestionnaireItem = ({ questionnaire }) => {\r\n\r\n  const { questionnaireController } = useContext(QuestionnaireContext);\r\n  const [ currentQuestionnaire ] = questionnaireController;\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ListItem \r\n        button \r\n        onClick={handleOpenDialog}\r\n        selected={questionnaire.id === currentQuestionnaire.id}\r\n      >\r\n        <ListItemText \r\n          primary={questionnaire.name}\r\n          secondary={questionnaire.detail}\r\n        />\r\n      </ListItem>\r\n      {openDialog && <ShowUnavailableQuestionnaire questionnaire={questionnaire} handleClose={handleCloseDialog} />}\r\n    </>\r\n  );\r\n}\r\n\r\nconst CreateQuestionnaire = () => {\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem button onClick={handleClickOpen}>\r\n        <ListItemText \r\n          primary=\"Add new questionnaire\"\r\n          secondary=\"Click here to add a new questionnaire\"\r\n        />\r\n        <ListItemSecondaryAction>\r\n          <IconButton edge=\"end\" onClick={handleClickOpen}>\r\n            <AddIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      {open && <CreateQuestionnaireDialog open handleClose={handleClose} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function QuestionnaireList() {\r\n  const [availableQuestionnaires, setAvailableQuestionnaires] = useState([]);\r\n  const [unavailableQuestionnaires, setUnavailableQuestionnaires] = useState([]);\r\n\r\n  const { questionnaireController } = useContext(QuestionnaireContext);\r\n  const [ currentQuestionnaire ] = questionnaireController;\r\n\r\n  const { managerController } = useContext(GlobalContext);\r\n  const [ manager ] = managerController;\r\n\r\n  useEffect(() => {\r\n    loadQuestionnairesByManager({\r\n      manager_id: Number(manager.id)\r\n    }).then(data => {\r\n\r\n      setAvailableQuestionnaires(data.available);\r\n      setUnavailableQuestionnaires(data.unavailable);\r\n\r\n    }).catch(error => {\r\n\r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n      } else {\r\n        alert('Error on load Questionnaires');\r\n      }\r\n\r\n    })\r\n  }, [currentQuestionnaire, manager]);\r\n\r\n  return (\r\n    <List component=\"nav\" style={{ height: 635, overflowY: 'auto' }}>\r\n      <CreateQuestionnaire />\r\n      {availableQuestionnaires.map(questionnaire => (\r\n        <AvailableQuestionnaireItem key={questionnaire.id} questionnaire={questionnaire} />\r\n      ))}\r\n      {availableQuestionnaires.length > 0 && unavailableQuestionnaires.length > 0 && <Divider component=\"li\" />}\r\n      {unavailableQuestionnaires.map(questionnaire => (\r\n        <UnavailableQuestionnaireItem key={questionnaire.id} questionnaire={questionnaire} />\r\n      ))}\r\n    </List>\r\n  );\r\n}","import React, { useState, createContext, useEffect } from 'react';\r\nimport api from '../../../services/api';\r\n\r\nexport const QuestionContext = createContext();\r\n\r\nexport default function QuestionProvider({ children }) {\r\n  \r\n  const [answerTypes, setAnswerTypes] = useState([]);\r\n  const [criteria, setCriteria] = useState([]);\r\n\r\n  const loadAnswerTypes = async () => {\r\n    const response = await api.post('/answer_types/index.php');\r\n\r\n    const { data } = response;\r\n    if(data.status === 'success') {\r\n      setAnswerTypes(data.docs);\r\n    } else {\r\n      alert('Error on load answer types');\r\n    }\r\n  }\r\n\r\n  const loadCriteria = async () => {\r\n    const response = await api.post('/criteria/index.php');\r\n\r\n    const { data } = response;\r\n    if(data.status === 'success') {\r\n      setCriteria(data.docs);\r\n    } else {\r\n      alert('Error on load criteria');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadAnswerTypes();\r\n    loadCriteria();\r\n  }, [])\r\n\r\n  const value = {\r\n    answerTypes,\r\n    criteria\r\n  }\r\n\r\n  return (\r\n    <QuestionContext.Provider value={value}>\r\n      {children}\r\n    </QuestionContext.Provider>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport api from '../../../../services/api';\r\nimport { QuestionnaireContext } from '../../context/QuestionnaireContext';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { QuestionContext } from '../../context/QuestionContext';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nconst QuestionItem = ({ \r\n  question, \r\n  answerTypes, \r\n  addQuestion, \r\n  removeQuestion \r\n}) => {\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    container: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      padding: theme.spacing(1, 2),\r\n      marginBottom: theme.spacing(1),\r\n      borderRadius: '4px',\r\n      width: '100%',\r\n    },\r\n    formControl: {\r\n      width: '100%'\r\n    },\r\n    elements: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      width: '100%',\r\n    },\r\n    element: {\r\n      width: '100%',\r\n      cursor: 'pointer',\r\n      marginTop: theme.spacing(1),\r\n      padding: theme.spacing(1.5),\r\n      backgroundColor: theme.palette.primary.light,\r\n      borderRadius: '8px',\r\n      transition: 'background-color .2s',\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.secondary.main,\r\n      }\r\n    }\r\n  }));\r\n\r\n  const [checked, setChecked] = useState(false);\r\n  const [answerType, setAnserType] = useState(1);\r\n\r\n  const handleChange = event => {\r\n    const { checked } = event.target;\r\n\r\n    if(checked) {\r\n      addQuestion({...question, answerType});\r\n    } else {\r\n      removeQuestion(question);\r\n    }\r\n\r\n    setChecked(checked);\r\n  }\r\n\r\n  const handleChangeAnswerType = event => {\r\n    const { value: answerType } = event.target;\r\n\r\n    removeQuestion(question);\r\n    setAnserType(answerType);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(checked) {\r\n      addQuestion({...question, answerType})\r\n    }\r\n  // eslint-disable-next-line\r\n  }, [answerType])\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={checked}\r\n            onChange={handleChange}\r\n            color=\"secondary\"\r\n          />\r\n        }\r\n        label={question.criterion}\r\n      />\r\n      <Grid container >\r\n        <Grid item sm={8}>\r\n          <Typography variant=\"subtitle1\" component=\"p\">\r\n            {question.text}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item sm={4}>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"Answer-Type\">Answer Type</InputLabel>\r\n            <Select\r\n              labelId=\"Answer-Type\"\r\n              color=\"secondary\"\r\n              value={answerType}\r\n              onChange={handleChangeAnswerType}\r\n              >\r\n                {answerTypes.map((answerType, index) => (\r\n                  <MenuItem key={index} value={answerType.id}>{answerType.name}</MenuItem>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n          <div className={classes.elements}>\r\n            {question.element_1_id && (\r\n              <Typography className={classes.element}>\r\n                {question.element_1}\r\n              </Typography>\r\n            )}\r\n            {question.element_2_id && (\r\n              <Typography className={classes.element}>\r\n                {question.element_2}\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function AddQuestion({ open, handleClose, oldQuestions }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    content: {\r\n      maxHeight: '80vh',\r\n      overFlowY: 'auto'\r\n    }\r\n  }))\r\n\r\n  const { questionnaireController } = useContext(QuestionnaireContext);\r\n  const [ questionnaire ] = questionnaireController;\r\n\r\n  const { answerTypes, criteria } = useContext(QuestionContext);\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selecteds, setSelecteds] = useState([]);\r\n\r\n  const filterQuestions = (newQuestions, oldQuestions) => {\r\n    const oldIds = oldQuestions.map(q => q.id);\r\n\r\n    return newQuestions.filter(q => !oldIds.includes(q.id));\r\n  }\r\n\r\n  const loadQuestions = async id => {\r\n    const response = await api.post('/criteria/questions.php', { id: Number(id) });\r\n\r\n    const { data } = response;\r\n    if(data.status === 'success') {\r\n      setQuestions(filterQuestions(data.docs, oldQuestions));\r\n    } else {\r\n      alert('Error on load questions');\r\n    }\r\n  }\r\n  \r\n  const handleStoreQuestions = async () => {\r\n    if(selecteds.length === 0) {\r\n      handleClose();\r\n      return;\r\n    }\r\n\r\n    const response = await api.post('questionnaires/sync.php',\r\n      {\r\n        id: Number(questionnaire.id),\r\n        attach: selecteds.map(question => (\r\n          { \r\n            id: Number(question.id), \r\n            answer_type_id: Number(question.answerType)\r\n          }\r\n        )),\r\n        detach: []\r\n      }\r\n    );\r\n\r\n    const { data } = response;\r\n    if(data.status === 'success'){\r\n      handleClose();\r\n    } else {\r\n      alert('Error question add');\r\n    }\r\n  }\r\n\r\n  const handleChangeCriterion = criterion => {\r\n    if(criterion) {\r\n      loadQuestions(criterion.id);\r\n    }\r\n  }\r\n\r\n  const addQuestion = question => {\r\n    setSelecteds([...selecteds, question]);\r\n  }\r\n\r\n  const removeQuestion = question => {\r\n    setSelecteds([...selecteds.filter(({ id }) => question.id !== id)]);\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} fullWidth>\r\n      <DialogTitle onClose={handleClose}>\r\n        Add Question\r\n      </DialogTitle>\r\n      <DialogContent className={classes.content} dividers>\r\n        <Typography gutterBottom> Criterion Name </Typography>\r\n        <Autocomplete\r\n          autoHighlight\r\n          options={criteria}\r\n          getOptionLabel={criterion => criterion.name}\r\n          onChange={(event, newValue) => handleChangeCriterion(newValue)}\r\n          style={{ width: '100%' }}\r\n          renderInput={(params) => <TextField {...params} label=\"Criterion Name\" variant=\"outlined\" />}\r\n        />\r\n        <FormGroup style={{ marginTop: 8 }}>\r\n          {questions.map((question, index) => (\r\n            <QuestionItem \r\n              key={index} \r\n              question={question} \r\n              answerTypes={answerTypes}\r\n              addQuestion={addQuestion}\r\n              removeQuestion={removeQuestion}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button \r\n          autoFocus \r\n          color=\"primary\"\r\n          onClick={handleStoreQuestions}\r\n        >\r\n          Add Questions\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport api from '../../../../services/api';\r\nimport { QuestionContext } from '../../context/QuestionContext';\r\nimport { QuestionnaireContext } from '../../context/QuestionnaireContext';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Dialog from '../../../../components/Dialog';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function ChangeAnswerType({ question, handleClose }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    secondaryAction: {\r\n      padding: theme.spacing(2),\r\n      color: theme.palette.success.dark,\r\n      cursor: 'pointer'\r\n    }\r\n  }));\r\n\r\n  const { answerTypes } = useContext(QuestionContext);\r\n  const { questionnaireController } = useContext(QuestionnaireContext)\r\n  const [ questionnaire ] = questionnaireController;\r\n\r\n  const changeAnswerType = (store) => {\r\n    return new Promise(async (res, rej) => {\r\n      const response = await api.post('/answer_types/update.php', store);\r\n\r\n      const { data } = response;\r\n      if(data.status === 'success') {\r\n        res(data.docs);\r\n      } else {\r\n        rej('Error on change answer type');\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleClick = answerType => {\r\n    if(question.answer_type_id === answerType.id) {\r\n      handleClose();\r\n      return;\r\n    }\r\n\r\n    changeAnswerType({\r\n      question_id: Number(question.id),\r\n      questionnaire_id: Number(questionnaire.id),\r\n      answer_type_id: Number(answerType.id)\r\n    }).then(json => {\r\n\r\n      // feedback user\r\n    }).catch(error => {\r\n\r\n      alert(error);\r\n    }).finally(() => {\r\n\r\n      handleClose();\r\n    });\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      title=\"Change Answer Type\"\r\n      submitText=\"Change Answer Type\"\r\n      handleClose={handleClose}\r\n      submit={handleClose}\r\n      maxWidth=\"md\"\r\n    >\r\n      <List className={classes.root}>\r\n        {answerTypes.map((answerType, index) => (\r\n          <div key={index}>\r\n            <ListItem button onClick={() => handleClick(answerType)} alignItems=\"flex-start\">\r\n              <ListItemText\r\n                primary={answerType.name}\r\n                secondary={' — ' + answerType.detail}\r\n              />\r\n              {question.answer_type_id === answerType.id && (\r\n                <ListItemSecondaryAction className={classes.secondaryAction}>\r\n                  <CheckCircleIcon />\r\n                </ListItemSecondaryAction>\r\n              )}\r\n            </ListItem>\r\n            {index < answerTypes.length - 1 && <Divider component=\"li\" />}\r\n          </div>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  )\r\n}","import React, { useState, useContext } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { QuestionnaireContext } from '../../context/QuestionnaireContext';\r\nimport { duplicateQuestionnaire } from '../../../../routes';\r\nimport Dialog from '../../../../components/Dialog';\r\n\r\nexport default function DuplicateQuestionnaire({ handleClose }) {\r\n\r\n  const { questionnaireController } = useContext(QuestionnaireContext);\r\n  const [questionnaire, setQuestionnaire] = questionnaireController;\r\n\r\n  const [name, setName] = useState(questionnaire.name + ' - copy');\r\n  const [detail, setDetail] = useState(questionnaire.detail);\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const validName = name => name.length >= 3 ? true : false;\r\n\r\n  const handleChageName = event => {\r\n    const { value } = event.target;\r\n    value.length <= 100 && setName(value);\r\n  }\r\n\r\n  const handleDetail = event => {\r\n    const { value } = event.target;\r\n    value.length <= 300 && setDetail(value);\r\n  }\r\n\r\n  const withoutErrors = () => {\r\n    const errors = [];\r\n    if(!validName(name)) {\r\n      errors.push('Please enter a name with at least 3 characters')\r\n    }\r\n    setErrors(errors);\r\n    return errors.length === 0;\r\n  }\r\n\r\n  const submit = () => {\r\n    if(withoutErrors()) {\r\n      duplicateQuestionnaire({\r\n        id: Number(questionnaire.id),\r\n        name, \r\n        detail\r\n      }).then(json => {\r\n\r\n        setQuestionnaire(json);\r\n      }).catch(error => {\r\n\r\n        alert(error.detail);\r\n      }).finally(() => {\r\n\r\n        handleClose();\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      title={`Duplicate Questionnaire \"${questionnaire.name}\"`}\r\n      submitText=\"Duplicate Questionnaire\"\r\n      handleClose={handleClose}\r\n      submit={submit}\r\n      maxWidth=\"sm\"\r\n    >\r\n      <Collapse in={errors.length > 0}>\r\n        <Alert \r\n          variant=\"filled\"\r\n          severity=\"error\"\r\n        >\r\n          {errors.join(', ')}\r\n        </Alert>\r\n      </Collapse>\r\n      <Typography style={{ marginTop: 10 }} gutterBottom> Questionnaire Name </Typography>\r\n      <TextField \r\n        id=\"name\" \r\n        label=\"ex: USP Questionnaire\" \r\n        variant=\"outlined\"\r\n        value={name}\r\n        fullWidth\r\n        onChange={handleChageName}\r\n      />\r\n      <Typography style={{ marginTop: 10 }} gutterBottom> Questionnaire Detail </Typography>\r\n      <TextField \r\n        id=\"detail\" \r\n        label=\"ex: Questionnaire Detail\" \r\n        variant=\"outlined\"\r\n        type=\"detail\"\r\n        value={detail}\r\n        fullWidth\r\n        onChange={handleDetail}\r\n      />\r\n    </Dialog>\r\n  )\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport api from '../../../../services/api';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport AddQuestionDialog from './Add';\r\nimport ChangeAnswerTypeDialog from './ChangeAnswerType';\r\nimport DuplicateQuestionnaireDialog from './DuplicateQuestionnaire';\r\nimport QuestionContextProvider from '../../context/QuestionContext';\r\nimport { QuestionnaireContext } from '../../context/QuestionnaireContext';\r\nimport { Add as AddIcon} from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst QuestionHeader = () => {\r\n  const useStyles = makeStyles(theme => ({\r\n    card: {\r\n      margin: theme.spacing(1, 1, 0, 1),\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.primary.contrastText\r\n    },\r\n    criterion: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      height: '100%',\r\n    },\r\n    question: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      height: '100%',\r\n    },\r\n    element: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      height: '100%',\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Grid container>\r\n        <Grid item sm={2} >\r\n          <CardContent className={classes.criterion}>\r\n            <Typography variant=\"body2\" component=\"p\" align=\"center\">\r\n              CRITERION\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item sm={6}>\r\n          <CardContent className={classes.question}>\r\n            <Typography variant=\"body1\" component=\"p\" align=\"center\">\r\n              QUESTION\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item sm={2}>\r\n          <CardContent className={classes.element}>\r\n            <Typography variant=\"body2\" component=\"p\" align=\"center\">\r\n              INTERACTION ELEMENTS\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item sm={2}>\r\n          <CardContent className={classes.element}>\r\n            <Typography variant=\"body2\" component=\"p\" align=\"center\">\r\n              ANSWER TYPE\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst QuestionItem = ({ question, reload }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    card: {\r\n      margin: theme.spacing(1, 1, 0, 1),\r\n      color: theme.palette.primary.contrastText\r\n    },\r\n    criterion: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      height: '100%',\r\n    },\r\n    question: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      height: '100%',\r\n    },\r\n    element: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      height: '100%',\r\n    },\r\n    actions: {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    remove: {\r\n      backgroundColor: theme.palette.remove.main,\r\n      color: theme.palette.remove.contrastText\r\n    },\r\n    change: {\r\n      backgroundColor: theme.palette.duplicate.main,\r\n      color: theme.palette.duplicate.contrastText\r\n    }\r\n  }));\r\n\r\n  const { questionnaireController } = useContext(QuestionnaireContext);\r\n  const [ questionnaire ] = questionnaireController;\r\n\r\n  const [openChangeDialog, setOpenChangeDialog] = useState(false);\r\n\r\n  const handleRemoveQuestion = async () => {\r\n    if(window.confirm(`Remove question:\"${question.text}\"`)) {\r\n      const response = await api.post('questionnaires/sync.php',\r\n        {\r\n          id: Number(questionnaire.id),\r\n          attach: [],\r\n          detach: [\r\n            Number(question.id)\r\n          ]\r\n        }\r\n      );\r\n\r\n      const { data } = response;\r\n      if(data.status === 'success') {\r\n        reload();\r\n      } else {\r\n        alert('Error question remove')\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleOpenChangeAnswerType = () => {\r\n    setOpenChangeDialog(true);\r\n  }\r\n\r\n  const handleCloseChangeAnswerType = () => {\r\n    setOpenChangeDialog(false);\r\n    reload();\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        <Grid container>\r\n          <Grid item sm={2} >\r\n            <CardContent className={classes.criterion}>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                {question.criterion}\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item sm={6}>\r\n            <CardContent className={classes.question}>\r\n              <Typography variant=\"body1\" component=\"p\">\r\n                {question.text}\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item sm={2}>\r\n            <CardContent className={classes.element}>\r\n              <Typography variant=\"body2\" component=\"p\" align=\"center\">\r\n                {question.element_1}\r\n              </Typography>\r\n              <Typography variant=\"body2\" component=\"p\" align=\"center\">\r\n                {question.element_2}\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item sm={2}>\r\n            <CardContent className={classes.element}>\r\n              <Typography variant=\"body2\" component=\"p\" align=\"center\">\r\n                {question.answer_type_name}\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n        <CardActions className={classes.actions}>\r\n          <Button onClick={handleRemoveQuestion} className={classes.remove}>\r\n            Remove question\r\n          </Button>\r\n          <Button onClick={handleOpenChangeAnswerType} className={classes.change}>\r\n            Change Answer Type\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {openChangeDialog && \r\n        <ChangeAnswerTypeDialog \r\n          question={question} \r\n          handleClose={handleCloseChangeAnswerType} \r\n        />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddQuestion = ({ reload, questions }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      color: theme.palette.save.contrastText,\r\n      backgroundColor: theme.palette.save.main,\r\n      padding: theme.spacing(3),\r\n      margin: theme.spacing(1, 0),\r\n      cursor: 'pointer'\r\n    },\r\n    icon: {\r\n      width: '32px',\r\n      height: '32px',\r\n      marginRight: '8px'\r\n    }\r\n  }));\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    reload()\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.container} onClick={handleClickOpen}>\r\n        <AddIcon className={classes.icon} />\r\n        <Typography variant=\"body1\" component=\"p\" align=\"center\">\r\n          Add questions to this questionnaire\r\n        </Typography>\r\n      </Paper>\r\n      {open && <AddQuestionDialog open handleClose={handleClose} oldQuestions={questions} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Actions = () => {\r\n  const useStyles = makeStyles(theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      margin: theme.spacing(1, 2)\r\n    },\r\n    save: {\r\n      marginLeft: theme.spacing(1),\r\n      backgroundColor: theme.palette.save.main,\r\n      color: theme.palette.save.contrastText\r\n    },\r\n    duplicate: {\r\n      marginLeft: theme.spacing(1),\r\n      backgroundColor: theme.palette.duplicate.main,\r\n      color: theme.palette.duplicate.contrastText\r\n    },\r\n    remove: {\r\n      marginLeft: theme.spacing(1),\r\n      backgroundColor: theme.palette.remove.main,\r\n      color: theme.palette.remove.contrastText\r\n    }\r\n  }))\r\n\r\n  const { questionnaireController } = useContext(QuestionnaireContext);\r\n  const [ questionnaire, setQuestionnaire ] = questionnaireController;\r\n\r\n  const [openDuplicateDialog, setOpenDuplicateDialog] = useState(false);\r\n\r\n  const handleDeleteQuestionnaire = async () => {\r\n    if(window.confirm(`Delete questionnaire \"${questionnaire.name}\"`)) {\r\n      const response = await api.post('questionnaires/delete.php', { id: Number(questionnaire.id) });\r\n\r\n      const { data } = response;\r\n      if(data.status === 'success') {\r\n        setQuestionnaire({});\r\n      } else {\r\n        alert('Error questionnaire delete')\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleOpenDuplicateDialog = () => {\r\n    setOpenDuplicateDialog(true);\r\n  }\r\n\r\n  const handleCloseDuplicateDialog = () => {\r\n    setOpenDuplicateDialog(false);\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.container}>\r\n        <Button onClick={handleOpenDuplicateDialog} className={classes.duplicate} size=\"large\">\r\n          Duplicate Questionnaire\r\n        </Button>\r\n        <Button onClick={handleDeleteQuestionnaire} className={classes.remove} size=\"large\">\r\n          Delete Questionnaire\r\n        </Button>\r\n      </div>\r\n      {openDuplicateDialog && <DuplicateQuestionnaireDialog handleClose={handleCloseDuplicateDialog} />}\r\n    </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default function ShowQuestions() {\r\n  const useStyles = makeStyles(theme => ({\r\n    container: {\r\n      height: 'calc(100vh - 70px)',\r\n      overflowY: 'auto'\r\n    },\r\n    title: {\r\n      padding: theme.spacing(2),\r\n      fontSize: '28px'\r\n    },\r\n    header: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between'\r\n    },\r\n  }))\r\n\r\n  const { questionnaireController } = useContext(QuestionnaireContext);\r\n  const [ currentQuestionnaire ] = questionnaireController;\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const loadQuestions = async id => {\r\n    const response = await api.post('/questionnaires/questions.php', { id: Number(id) });\r\n    const { data } = response;\r\n    if(data.status === 'success') {\r\n      setQuestions(data.docs);\r\n    } else {\r\n      alert('Error on load questions');\r\n    }\r\n  }\r\n\r\n  const reload = () => {\r\n    if(currentQuestionnaire.id) {\r\n      loadQuestions(currentQuestionnaire.id);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadQuestions(currentQuestionnaire.id);\r\n  }, [currentQuestionnaire])\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <QuestionContextProvider>\r\n      <div className={classes.container}>\r\n        <div className={classes.header}>\r\n          <Typography className={classes.title} variant=\"h5\" noWrap>\r\n            {currentQuestionnaire.name}\r\n          </Typography>\r\n          <Actions />\r\n        </div>\r\n        <QuestionHeader />\r\n        {questions.map((question, index) => (\r\n          <QuestionItem key={index} question={question} reload={reload} />\r\n        ))}\r\n        <AddQuestion reload={reload} questions={questions} />\r\n      </div>\r\n    </QuestionContextProvider>\r\n  )\r\n}\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport SelectWebsiteSvg from '../../../../assets/select_website.svg';\r\nimport { QuestionnaireContext } from '../../context/QuestionnaireContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateQuestionnaireDialog from '../QuestionnaireList/CreateQuestionnaire';\r\nimport Show from './show';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function RightPane() {\r\n  const useStyles = makeStyles(theme => ({\r\n    container: {\r\n      height: '100%',\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-around',\r\n      alignItems: 'center'\r\n    },\r\n    title: {\r\n      color: '#444'\r\n    },\r\n    svg: {\r\n      maxHeight: '350px'\r\n    },\r\n    link: {\r\n      color: theme.palette.primary.main,\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        textDecoration: 'underline'\r\n      }\r\n    },\r\n  }));\r\n\r\n  const { questionnaireController } = useContext(QuestionnaireContext);\r\n  const [ questionnaire ] = questionnaireController;\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const handleClickOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    questionnaire.id ? (\r\n      <Show />\r\n    ) : (\r\n      <div className={classes.container}>\r\n        <Typography \r\n          className={classes.title}\r\n          variant=\"h4\"\r\n        >\r\n          Select a questionnaire on the Left\r\n        </Typography>\r\n        <img \r\n          className={classes.svg}\r\n          src={SelectWebsiteSvg} \r\n          alt=\"Select some questionnaire\" \r\n        /> \r\n        <Typography \r\n          className={classes.link}\r\n          variant=\"subtitle1\"\r\n          onClick={handleClickOpenDialog}\r\n        >\r\n          Or Click here to add a New Questionnaire\r\n        </Typography>\r\n        <CreateQuestionnaireDialog open={openDialog} handleClose={handleCloseDialog} />\r\n      </div>\r\n    )\r\n  );\r\n}","import React from 'react';\r\nimport QuestionnaireProvider from './context/QuestionnaireContext';\r\nimport QuestionnaireList from './components/QuestionnaireList';\r\nimport RightPanel from './components/RightPanel';\r\n\r\nexport default function PanelQuestionnaires({ classes }) {\r\n  return (\r\n    <QuestionnaireProvider>\r\n      <div className={classes.list}>\r\n        <QuestionnaireList />\r\n      </div>\r\n      <div className={classes.content}>\r\n        <RightPanel />\r\n      </div>\r\n    </QuestionnaireProvider>\r\n  );\r\n}\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const AssessmentContext = createContext();\r\n\r\nexport default function AssessmentProvider({ children }) {\r\n  \r\n  const currentAssessmentController = useState({});\r\n  const viewController = useState('show');\r\n\r\n  const state = {\r\n    currentAssessmentController,\r\n    viewController\r\n  }\r\n\r\n  return (\r\n    <AssessmentContext.Provider value={state}>\r\n      {children}\r\n    </AssessmentContext.Provider>\r\n  );\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport { Add as AddIcon } from '@material-ui/icons';\r\n\r\nimport { AssessmentContext } from '../../context/AssessmentContext';\r\nimport { loadEvaluationsByManager } from '../../../../routes';\r\nimport { GlobalContext } from '../../../../context/GlobalContext';\r\nimport { RUNTIME_ERROR } from '../../../../constants';\r\n\r\nconst AssessmentItem = ({ assessment }) => {\r\n\r\n  const { currentAssessmentController, viewController } = useContext(AssessmentContext);\r\n  const [currentAssessment, setCurrentAssessment] = currentAssessmentController;\r\n  const [view, setView] = viewController;\r\n\r\n  const handleCurrentAssessment = () => {\r\n    if (currentAssessment !== assessment) {\r\n      setCurrentAssessment(assessment);\r\n      if(view !== 'show') {\r\n        setView('show');\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ListItem \r\n      button \r\n      onClick={handleCurrentAssessment}\r\n      selected={assessment.id === currentAssessment.id}\r\n    >\r\n      <ListItemText \r\n        primary={assessment.name}\r\n        secondary={assessment.detail}\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nconst CreateAssessment = () => {\r\n\r\n  const { viewController } = useContext(AssessmentContext);\r\n  const [view, setView] = viewController;\r\n\r\n  const handleAddAssessment = () => {\r\n    if(view !== 'create') {\r\n      setView('create');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListItem button onClick={handleAddAssessment}>\r\n      <ListItemText \r\n        primary=\"Add new Evaluation\"\r\n        secondary=\"Click here to add a new evaluation\"\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <IconButton edge=\"end\" onClick={handleAddAssessment}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default function AssessmentList() {\r\n\r\n  const { managerController } = useContext(GlobalContext);\r\n  const [ manager ] = managerController;\r\n\r\n  const { currentAssessmentController } = useContext(AssessmentContext);\r\n  const [ currentAssessment ] = currentAssessmentController;\r\n\r\n  const [assessments, setAssessments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadEvaluationsByManager({\r\n      manager_id: manager.id\r\n    }).then(json => {\r\n\r\n      setAssessments(json);\r\n    }).catch(error => {\r\n\r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n      } else {\r\n        alert('Error on load Evaluations');\r\n      }\r\n\r\n    })\r\n  }, [manager, currentAssessment]);\r\n\r\n  return (\r\n    <List component=\"nav\">\r\n      <CreateAssessment />\r\n      {assessments.map(assessment => (\r\n        <AssessmentItem key={assessment.id} assessment={assessment} button />\r\n      ))}\r\n    </List>\r\n  );\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport { AssessmentContext } from '../../../context/AssessmentContext';\r\n\r\nimport { loadEvaluatorsByEvaluation } from '../../../../../routes';\r\nimport { RUNTIME_ERROR } from '../../../../../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listRoot: {\r\n    width: '100%',\r\n  },\r\n  containerProfile: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  personIcon: {\r\n    margin: theme.spacing(2, 0),\r\n    fontSize: '128px'\r\n  }\r\n}));\r\n\r\nconst Profile = ({ evaluator }) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.containerProfile}>\r\n      {evaluator.id ? (\r\n        <>\r\n          <AccountCircleIcon className={classes.personIcon} />\r\n          <div>\r\n            <Typography variant=\"h6\">\r\n              {evaluator.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {evaluator.email}\r\n            </Typography>\r\n          </div>\r\n          <hr />\r\n        </>\r\n      ) : (\r\n        <Typography>\r\n          Select some evaluator to view details\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function ShowEvaluators() {\r\n\r\n  const { currentAssessmentController } = useContext(AssessmentContext);\r\n  const [ currentAssessment ] = currentAssessmentController;\r\n\r\n  const [evaluators, setEvaluators] = useState([]);\r\n  const [evaluator, setEvaluator] = useState({});\r\n\r\n  const handleSelectEvaluator = (evaluator) => {\r\n    setEvaluator(evaluator);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(currentAssessment.id) {\r\n      loadEvaluatorsByEvaluation({\r\n        id: Number(currentAssessment.id)\r\n      }).then(data => {\r\n\r\n        setEvaluators(data);\r\n      }).catch(error => {\r\n\r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          alert(error.detail);\r\n        } else {\r\n          alert('Error on load Evaluators');\r\n        }\r\n\r\n      })\r\n    }\r\n  }, [currentAssessment])\r\n\r\n  useEffect(() => {\r\n    setEvaluator({});\r\n  }, [currentAssessment]);\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item sm={5}>\r\n        <List className={classes.root}>\r\n          {evaluators.map((evaluator, index) => (\r\n            <React.Fragment key={evaluator.id}>\r\n              <ListItem button onClick={() => handleSelectEvaluator(evaluator)}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <PersonIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={evaluator.name} secondary={evaluator.email} />\r\n              </ListItem>\r\n              {index < evaluators.length - 1 && <Divider variant=\"inset\" component=\"li\" />}\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n      <Grid item sm={7}>\r\n        <Profile evaluator={evaluator} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    background: '#FAFAFA',\r\n    boxShadow: '2px 2px 4px rgba(0, 0, 0, 0.25)',\r\n    borderRadius: '40px'\r\n  }\r\n}))\r\n\r\nexport default function BoardRounded({ children, className, ...others }) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.container, className)} {...others} >{children}</div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport BoardRounded from './BoardRounded';\r\n\r\nimport { AssessmentContext } from '../../../context/AssessmentContext';\r\n\r\nimport { \r\n  showQuestionnaire, \r\n  loadQuestionsByQuestionnaire \r\n} from '../../../../../routes';\r\n\r\nimport { RUNTIME_ERROR } from '../../../../../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    height: '100%',\r\n    margin: theme.spacing(0, 2),\r\n    padding: theme.spacing(3)\r\n  },\r\n  header: {\r\n    height: '75px',\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around'\r\n  },\r\n  title: {\r\n    fontSize: '24px'\r\n  },\r\n  listContainer: {\r\n    position: 'relative',\r\n    height: 'calc(100% - 75px)',\r\n  },\r\n  list: {\r\n    width: '100%',\r\n    height: '100%',\r\n    overflowY: 'auto',\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n  }\r\n}));\r\n\r\nexport default function ShowQuestionnaire() {\r\n\r\n  const { currentAssessmentController } = useContext(AssessmentContext);\r\n  const [ currentAssessment ] = currentAssessmentController;\r\n\r\n  const [questionnaire, setQuestionnaire] = useState({});\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selected, setSelected] = useState({});\r\n\r\n  const handleSelectQuestion = (selected) => {\r\n    setSelected(selected);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(currentAssessment.questionnaire_id) {\r\n      showQuestionnaire({\r\n        id: Number(currentAssessment.questionnaire_id)\r\n      }).then(data => {\r\n\r\n        setQuestionnaire(data);\r\n      }).catch(error => {\r\n\r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          alert(error.detail);\r\n        } else {\r\n          alert('Error on load Questionnaire');\r\n        }\r\n\r\n      })\r\n    }\r\n  }, [currentAssessment]);\r\n\r\n  useEffect(() => {\r\n    if(questionnaire.id) {\r\n      loadQuestionsByQuestionnaire({\r\n        id: Number(questionnaire.id)\r\n      }).then(data => {\r\n\r\n        setQuestions(data);\r\n      }).catch(error => {\r\n\r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          alert(error.detail);\r\n        } else {\r\n          alert('Error on load Questions');\r\n        }\r\n\r\n      })\r\n    }\r\n  }, [questionnaire]);\r\n\r\n  useEffect(() => {\r\n    setSelected({});\r\n  }, [currentAssessment]);\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <Grid item sm={6}>\r\n        <BoardRounded className={classes.content}>\r\n          <div className={classes.header}>\r\n            <Typography className={classes.title}>\r\n              {questionnaire.name}\r\n            </Typography>\r\n          </div>\r\n          <Divider />\r\n          <div className={classes.listContainer}>\r\n            <List className={classes.list}>\r\n              {questions.map(question => (\r\n                <ListItem \r\n                  button \r\n                  key={question.id} \r\n                  selected={question.id === selected.id}\r\n                  onClick={() => handleSelectQuestion(question)}\r\n                >\r\n                  <ListItemText \r\n                    primary={question.criterion} \r\n                    secondary={question.text}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </BoardRounded>\r\n      </Grid>\r\n      <Grid item sm={6}>\r\n        <BoardRounded className={classes.content}>\r\n          <div className={classes.header}>\r\n            <Typography className={classes.title}>\r\n              Answers\r\n            </Typography>\r\n          </div>\r\n          <Divider />\r\n        </BoardRounded>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nimport Dialog from '../../../../../components/Dialog';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\n// Icons\r\nimport PointIcon from '@material-ui/icons/FiberManualRecord';\r\nimport EndPointIcon from '@material-ui/icons/DonutLarge';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nimport BoardRounded from './BoardRounded';\r\n\r\nimport { AssessmentContext } from '../../../context/AssessmentContext';\r\n\r\nimport { \r\n  loadEvaluatorsByEvaluation,\r\n  loadTasksByEvaluation, \r\n  loadPathTask,\r\n  showWebsiteByEvaluation,\r\n  loadQuestionsByQuestionnaire,\r\n  loadPagesByWebsite,\r\n  loadTaskPathByUserAndTask,\r\n  storeEvaluatorPathTask\r\n} from '../../../../../routes';\r\nimport { RUNTIME_ERROR } from '../../../../../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    height: '100%',\r\n    margin: theme.spacing(0, 2),\r\n    padding: theme.spacing(3),\r\n  },\r\n  header: {\r\n    height: '75px',\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around'\r\n  },\r\n  designerListContainer: {\r\n    position: 'relative',\r\n    height: 'calc(100% - 75px)',\r\n  },\r\n  evaluatorListContainer: {\r\n    position: 'relative',\r\n    height: 'calc(100% - 75px - 50px)',\r\n  },\r\n  list: {\r\n    width: '100%',\r\n    height: '100%',\r\n    overflowY: 'auto',\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n  footer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n    height: '50px'\r\n  },\r\n  matchesButton: {\r\n    backgroundColor: '#5D5',\r\n    color: '#FFF'\r\n  },\r\n  doesnotMatchesButton: {\r\n    backgroundColor: '#D55',\r\n    color: '#FFF'\r\n  }\r\n}));\r\n\r\nconst SelectStyled = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    position: 'relative',\r\n    padding: '10px 26px 10px 12px',\r\n    backgroundColor: '#FAFAFA',\r\n    fontSize: '24px',\r\n  },\r\n}))(InputBase);\r\n\r\n\r\n// EM CONSTRUÇÃO\r\n\r\nconst getQuestionsToSend = async (path, evaluation) => {\r\n\r\n  let questions = [];\r\n\r\n  await loadQuestionsByQuestionnaire({\r\n    id: Number(evaluation.questionnaire_id)\r\n  }).then(data => {\r\n\r\n    questions = data;\r\n  }).catch(error => {\r\n\r\n    if(Number(error.id) !== RUNTIME_ERROR) {\r\n      alert(error.detail);\r\n    } else {\r\n      alert('Error on load questions');\r\n    }\r\n  })\r\n\r\n  let questions_to_send = {}\r\n\r\n  questions.forEach(question => {\r\n    path.forEach(page => {\r\n      if(page.element_1_id == question.element_1_id\r\n        || page.element_2_id == question.element_1_id\r\n        || page.element_3_id == question.element_1_id\r\n        || page.element_4_id == question.element_1_id\r\n        || page.element_5_id == question.element_1_id\r\n        || page.element_1_id == question.element_2_id\r\n        || page.element_2_id == question.element_2_id\r\n        || page.element_3_id == question.element_2_id\r\n        || page.element_4_id == question.element_2_id\r\n        || page.element_5_id == question.element_2_id\r\n        ) {\r\n          questions_to_send[question.id] = question;\r\n        }\r\n    })\r\n  })\r\n\r\n  return Object.values(questions_to_send);\r\n\r\n}\r\n\r\n// EM CONSTRUÇÃO\r\n\r\nconst DialogQuestionsToSend = ({ handleCloseDialog, path }) => {\r\n\r\n  const { currentAssessmentController } = useContext(AssessmentContext);\r\n  const [ currentAssessment ] = currentAssessmentController;\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n  const [copied, setCopied] = useState(false)\r\n  const [csv, setCsv] = useState('')\r\n\r\n  const getQuestions = async () => {\r\n    const questionsToSend = await getQuestionsToSend(path, currentAssessment);\r\n    setCsv(`Question_Text|Ergonomic_Criterion|Answer_Type|Interaction_Element_1|Interaction_Element_2\\n${questionsToSend.map(question => Object.values(question).filter((_, i) => i % 2 === 1).map(item => item ? item : 'null').join('|')).join('\\n')}`)\r\n    setQuestions(questionsToSend);\r\n  }\r\n\r\n  const getCsv = () => csv\r\n  \r\n  useEffect(() => {\r\n    getQuestions();\r\n  }, [])\r\n\r\n  return (\r\n    <Dialog\r\n      title=\"Questions\"\r\n      submitText=\"Questions genereted\"\r\n      handleClose={handleCloseDialog}\r\n      submit={handleCloseDialog}\r\n      maxWidth=\"md\"\r\n    >\r\n      <CopyToClipboard\r\n        text={getCsv()}\r\n        onCopy={() => setCopied(true)}\r\n      >\r\n        <Tooltip\r\n          title={\r\n            copied\r\n              ? \"This was Copied!\"\r\n              : \"Copy To Clipboard\"\r\n          }\r\n          placement=\"top\"\r\n        >\r\n          <Button size=\"medium\" fullWidth>\r\n            Export to CSV\r\n          </Button>\r\n        </Tooltip>\r\n      </CopyToClipboard>\r\n      <List >\r\n        {questions.map((question, index) => (\r\n          <ListItem key={index}>\r\n            <ListItemIcon>\r\n                <PointIcon />\r\n            </ListItemIcon>\r\n            <ListItemText \r\n              primary={question.criterion} \r\n              secondary={question.text}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nconst DialogAddRoute = ({ task_id, evaluator_id, handleCloseDialog }) => {\r\n\r\n  const { currentAssessmentController } = useContext(AssessmentContext);\r\n  const [ currentAssessment ] = currentAssessmentController;\r\n\r\n  const [pages, setPages] = useState([])\r\n  const [selectedPages, setSelectedPages] = useState([])\r\n\r\n  const loadPages = () => {\r\n    showWebsiteByEvaluation({\r\n      id: Number(currentAssessment.id)\r\n    }).then(website => {\r\n\r\n      loadPagesByWebsite({\r\n        id: Number(website.id)\r\n      }).then(data => {\r\n\r\n        setPages(data);\r\n      }).catch(error => {\r\n\r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          alert(error.detail);\r\n        } else {\r\n          alert('Error on load pages');\r\n        }\r\n      })\r\n    \r\n    }).catch(error => {\r\n  \r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n      } else {\r\n        alert('Error on load website');\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleAddPage = newPage => {\r\n    setSelectedPages(prevPages => [...prevPages, newPage]);\r\n  }\r\n\r\n  const handleRemovePage = oldPage => {\r\n    setSelectedPages(prevPages => prevPages.filter(page => page.id != oldPage.id))\r\n  }\r\n\r\n  const handleSubmitPages = () => {\r\n    storeEvaluatorPathTask({\r\n      task_id: Number(task_id), \r\n      evaluator_id: Number(evaluator_id),\r\n      pages: selectedPages.map(page => Number(page.id))\r\n    }).then(data => {\r\n\r\n      alert('Ok!')    \r\n    }).catch(error => {\r\n  \r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n      } else {\r\n        alert('Error on load website');\r\n      }\r\n    }).finally(() => {\r\n      handleCloseDialog()\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadPages()\r\n  }, []);\r\n\r\n  return (\r\n    <Dialog\r\n      title=\"User Route\"\r\n      submitText=\"Define Route\"\r\n      handleClose={handleCloseDialog}\r\n      submit={handleSubmitPages}\r\n      maxWidth=\"md\"\r\n    >\r\n      <Grid container>\r\n        <Grid item sm={6}>\r\n          <List >\r\n            {pages.map((page, index) => (\r\n              <ListItem onClick={() => handleAddPage(page)} button key={index}>\r\n                <ListItemIcon>\r\n                  <PointIcon />\r\n                </ListItemIcon>\r\n                <ListItemText \r\n                  primary={page.name} \r\n                  secondary={page.url}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n        <Grid item sm={6}>\r\n          {selectedPages.map((page, index) => (\r\n            <ListItem onClick={() => handleRemovePage(page)} button key={index}>\r\n              <ListItemText \r\n                primary={page.name} \r\n                secondary={page.url}\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" onClick={() => handleRemovePage(page)}>\r\n                  <DeleteForeverIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default function ShowTaks() {\r\n\r\n  const { currentAssessmentController } = useContext(AssessmentContext);\r\n  const [ currentAssessment ] = currentAssessmentController;\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskId, setTaskId] = useState('');\r\n  const [taskPath, setTaskPath] = useState([]);\r\n  const [evaluators, setEvaluators] = useState([]);\r\n  const [evaluatorId, setEvaluatorId] = useState('');\r\n\r\n  const [taskPathUser, setTaskPathUser] = useState([])\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openDialogUser, setOpenDialogUser] = useState(false);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  }\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  }\r\n\r\n  const handleChangeOpenAddRouteUser = () => {\r\n    setOpenDialogUser(true)\r\n  }\r\n\r\n  const handleChangeCloseAddRouteUser = () => {\r\n    loadUserPath()\r\n    setOpenDialogUser(false)\r\n  }\r\n\r\n  const handleSelectTask = (event) => {\r\n    const taskId = event.target.value;\r\n\r\n    if(taskId.length > 0) {\r\n      loadPathTask({ \r\n        task_id: taskId \r\n      }).then(data => {\r\n\r\n        setTaskPath(data.map(page => ({...page, id: page.page_id})));\r\n      }).catch(error => {\r\n\r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          alert(error.detail);\r\n        } else {\r\n          alert('Error on Task Path');\r\n        }\r\n\r\n      }).finally(() => {\r\n\r\n        setTaskId(taskId);\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleSelectEvaluator = (event) => {\r\n    const evaluatorId = event.target.value;\r\n    setEvaluatorId(evaluatorId);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setEvaluators([])\r\n    if(currentAssessment.id) {\r\n      loadEvaluatorsByEvaluation({\r\n        id: Number(currentAssessment.id)\r\n      }).then(data => {\r\n\r\n        setEvaluators(data);\r\n      }).catch(error => {\r\n\r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          alert(error.detail);\r\n        } else {\r\n          alert('Error on load Evaluators');\r\n        }\r\n\r\n      })\r\n    }\r\n  }, [currentAssessment]);\r\n\r\n  const loadUserPath = () => {\r\n    if(taskId && evaluatorId) {\r\n      loadTaskPathByUserAndTask({\r\n        task_id: Number(taskId),\r\n        evaluator_id: evaluatorId\r\n      }).then(data => {\r\n\r\n        setTaskPathUser(data.map(page => ({...page, id: page.page_id})));\r\n      }).catch(error => {\r\n\r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          alert(error.detail);\r\n        } else {\r\n          alert('Error on load Evaluators');\r\n        }\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUserPath();\r\n  }, [taskId, evaluatorId]);\r\n\r\n  useEffect(() => {\r\n    setTasks([])\r\n    setTaskPath([])\r\n    setTaskPathUser([])\r\n    setTaskId('');\r\n    setEvaluatorId('')\r\n    if(currentAssessment.id) {\r\n      loadTasksByEvaluation({\r\n        id: Number(currentAssessment.id)\r\n      }).then(data => {\r\n\r\n        setTasks(data);\r\n      }).catch(error => {\r\n\r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          alert(error.detail);\r\n        } else {\r\n          alert('Error on load Questions');\r\n        }\r\n\r\n      })\r\n    }\r\n  }, [currentAssessment]);\r\n\r\n  const getEvaluatorTaskPath = () => taskPathUser\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n    <Grid container className={classes.container}>\r\n      <Grid item sm={6}>\r\n        <BoardRounded className={classes.content}>\r\n          <div className={classes.header}>\r\n            <Select\r\n              id=\"select-task\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={taskId}\r\n              onChange={handleSelectTask}\r\n              input={<SelectStyled />}\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                <em>Select some task</em>\r\n              </MenuItem>\r\n              {tasks.map(task => (\r\n                <MenuItem key={task.id} value={task.id}>\r\n                  {task.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n          <Divider />\r\n          <div className={classes.designerListContainer}>\r\n            <List \r\n              className={classes.list}\r\n              subheader={\r\n                <ListSubheader component=\"div\" id=\"list-subheader\">\r\n                  Made by Bruno Contreras\r\n                </ListSubheader>\r\n              }\r\n            >\r\n              {taskPath.map((page, index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemIcon>\r\n                    {index < taskPath.length - 1 ? <PointIcon /> : <EndPointIcon />}\r\n                  </ListItemIcon>\r\n                  <ListItemText \r\n                    primary={page.name} \r\n                    secondary={page.url}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </BoardRounded>\r\n      </Grid>\r\n      <Grid item sm={6}>\r\n        <BoardRounded className={classes.content}>\r\n          <div className={classes.header}>\r\n            <Select\r\n              id=\"select-evaluator\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={evaluatorId}\r\n              onChange={handleSelectEvaluator}\r\n              input={<SelectStyled />}\r\n              renderValue={(selected) => {\r\n                const evaluator = evaluators.find(evaluator => evaluator.id === selected)\r\n\r\n                if(evaluator) {\r\n                  return evaluator.name;\r\n                } else {\r\n                  return <em>Select some evaluator</em>\r\n                }\r\n              }}\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                <em>Select some evaluator</em>\r\n              </MenuItem>\r\n              {evaluators.map(evaluator => (\r\n                <MenuItem key={evaluator.id} value={evaluator.id}>\r\n                  <ListItemText \r\n                    primary={evaluator.name} \r\n                    secondary={evaluator.email}\r\n                  />\r\n                  {Math.random() <= 0.5 ? (\r\n                    <ListItemIcon>\r\n                      <CheckCircleIcon style={{ color: '#7D7' }} />\r\n                    </ListItemIcon>\r\n                  ) : (\r\n                    <ListItemIcon>\r\n                      <ScheduleIcon />\r\n                    </ListItemIcon>\r\n                  )}                  \r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n          <Divider />\r\n          <div className={classes.evaluatorListContainer}>\r\n\r\n            {/* EXAMPLE */}\r\n            <List className={classes.list}>\r\n              {getEvaluatorTaskPath().length > 0 ? (\r\n                getEvaluatorTaskPath().map((page, index) => (\r\n                  <ListItem key={index}>\r\n                    <ListItemIcon>\r\n                      {index < getEvaluatorTaskPath().length - 1 ? <PointIcon /> : <EndPointIcon />}\r\n                    </ListItemIcon>\r\n                    <ListItemText \r\n                      primary={page.name} \r\n                      secondary={page.url}\r\n                    />\r\n                  </ListItem>\r\n                ))\r\n              ) : (\r\n                <Button \r\n                  size=\"large\"\r\n                  fullWidth\r\n                  onClick={() => handleChangeOpenAddRouteUser()}\r\n                >\r\n                  Add Route\r\n                </Button>\r\n              )}\r\n            </List>\r\n            {/* EXAMPLE */}\r\n\r\n          </div>\r\n          <Divider />\r\n          <div className={classes.footer}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.matchesButton}\r\n              startIcon={<CheckCircleIcon />}\r\n              onClick={() => alert('This Path Match!')}\r\n            >\r\n              Matches\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.doesnotMatchesButton}\r\n              startIcon={<CancelIcon />}\r\n              onClick={() => { \r\n                if(getEvaluatorTaskPath().length > 0) {\r\n                  handleOpenDialog()\r\n                } else {\r\n                  handleOpenDialog()\r\n                }\r\n              }}\r\n            >\r\n              Does Not Match\r\n            </Button>\r\n          </div>\r\n        </BoardRounded>\r\n      </Grid>\r\n    </Grid>\r\n    {\r\n      openDialog && \r\n      <DialogQuestionsToSend \r\n        handleCloseDialog={handleCloseDialog}\r\n        path={taskPath} \r\n      />\r\n    }\r\n    {\r\n      openDialogUser &&\r\n      <DialogAddRoute\r\n        handleCloseDialog={handleChangeCloseAddRouteUser}\r\n        task_id={taskId} \r\n        evaluator_id={evaluatorId}\r\n      />\r\n    }\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport BoardRounded from './BoardRounded';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '315px'\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    height: '75px',\r\n    padding: theme.spacing(1)\r\n  },\r\n  title: {\r\n    color: '#474747',\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n  },\r\n  button: {\r\n    backgroundColor: '#1DB954',\r\n    color: '#FFFFFF'\r\n  },\r\n  history: {\r\n    height: '200px',\r\n  },\r\n  list: {\r\n    overflowY: 'auto',\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  footer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: '40px',\r\n  },\r\n  footerContent: {\r\n    marginLeft: theme.spacing(1),\r\n    color: '#9F9F9F',\r\n    fontSize: '12px'\r\n  }\r\n}))\r\n\r\n\r\nconst History = () => {\r\n\r\n  const history = [\r\n    { id: 1, data: 'Bruno Contreras answered a question about Readiness', date: '3:32 P.M, 17th September, 2020'},\r\n    { id: 2, data: 'Bruno Contreras answered a question about Readiness', date: '3:32 P.M, 17th September, 2020'},\r\n    { id: 3, data: 'Bruno Contreras answered a question about Readiness', date: '3:32 P.M, 17th September, 2020'},\r\n    { id: 4, data: 'Bruno Contreras answered a question about Readiness', date: '3:32 P.M, 17th September, 2020'},\r\n    { id: 5, data: 'Bruno Contreras answered a question about Readiness', date: '3:32 P.M, 17th September, 2020'}\r\n  ]\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.list}>\r\n      {history.map((item) => (\r\n        <ListItem key={item.id}>\r\n          <ListItemText \r\n            primary={item.data} \r\n            secondary={item.date} \r\n          />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default function EvaluationHistory() {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <BoardRounded className={classes.container}>\r\n      <div className={classes.header}>\r\n        <Typography className={classes.title} variant=\"body1\" component=\"h3\">\r\n          Evaluation History\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          endIcon={<RefreshIcon />}\r\n        >\r\n          Refresh\r\n        </Button>\r\n      </div>\r\n      <Divider />\r\n      <div className={classes.history}>\r\n        <History />\r\n      </div>\r\n      <Divider />\r\n      <div className={classes.footer}>\r\n        <Typography className={classes.footerContent} variant=\"subtitle2\">\r\n          Last refresh at 3:32 P.M, 17th September, 2020\r\n        </Typography>\r\n      </div>\r\n    </BoardRounded>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport BoardRounded from './BoardRounded';\r\nimport EvaluationHistory from './EvaluationHistory';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  panel: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  pizza: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n    padding: theme.spacing(3),\r\n    height: '315px'\r\n  },\r\n  pizzaTitle: {\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center'\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  about: {\r\n    padding: theme.spacing(3),\r\n  }\r\n}))\r\n\r\nconst CircularProgressWithLabel = (props) => {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress \r\n        size={100}\r\n        color=\"secondary\"\r\n        variant=\"static\" {...props} \r\n      />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography \r\n          variant=\"h5\" \r\n          component=\"div\" \r\n          color=\"secondary\"\r\n        >\r\n          {`${Math.round(props.value,)}%`}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst CompletedTasks = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <BoardRounded className={classes.pizza}>\r\n      <Typography \r\n        variant=\"body1\" \r\n        component=\"h4\"\r\n        color=\"secondary\"\r\n        className={classes.pizzaTitle}\r\n      >\r\n        Completed Tasks\r\n      </Typography>\r\n      <CircularProgressWithLabel value={95} />\r\n      <Link\r\n        className={classes.link}\r\n        component=\"button\"\r\n        variant=\"body2\"\r\n        onClick={() => {\r\n          alert('go to tasks');\r\n        }}\r\n      >\r\n        View Tasks\r\n        <ArrowRightAltIcon />\r\n      </Link>\r\n    </BoardRounded>\r\n  );\r\n}\r\n\r\nconst QuestionsAnswered = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <BoardRounded className={classes.pizza}>\r\n      <Typography \r\n        variant=\"body1\" \r\n        component=\"h3\"\r\n        color=\"secondary\"\r\n        className={classes.pizzaTitle}\r\n      >\r\n        Questions Answered\r\n      </Typography>\r\n      <CircularProgressWithLabel value={35} />\r\n      <Link\r\n        className={classes.link}\r\n        component=\"button\"\r\n        variant=\"body2\"\r\n        onClick={() => {\r\n          alert('go to questions');\r\n        }}\r\n      >\r\n        View Questions\r\n        <ArrowRightAltIcon />\r\n      </Link>\r\n    </BoardRounded>\r\n  );\r\n}\r\n\r\nexport default function ShowGeneral() {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item sm={6}>\r\n          <div className={classes.panel}>\r\n            <EvaluationHistory />\r\n          </div>\r\n        </Grid>\r\n        <Grid item sm={3}>\r\n          <div className={classes.panel}>\r\n            <CompletedTasks />\r\n          </div>\r\n        </Grid>\r\n        <Grid item sm={3}>\r\n          <div className={classes.panel}>\r\n            <QuestionsAnswered />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <BoardRounded className={classes.about}>\r\n        <Typography variant=\"h5\" component=\"h5\">\r\n          About this evaluation\r\n        </Typography>\r\n        <Grid container>\r\n          <Grid item sm={6}>\r\n            Details\r\n          </Grid>\r\n          <Grid item sm={6}>\r\n            \r\n          </Grid>\r\n        </Grid>\r\n      </BoardRounded>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab'\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: '45px',\r\n    fontSize: '18px',\r\n  },\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `tab-${index}`,\r\n    'aria-controls': `tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'transparent',\r\n    '& > span': {\r\n      maxWidth: 40,\r\n      width: '100%',\r\n      backgroundColor: '#635ee7',\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    color: theme.palette.secondary.main,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: theme.typography.pxToRem(15),\r\n    marginRight: theme.spacing(1),\r\n    '&:focus': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nexport default function TabsComponent({ tabs, value, handleChange }) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <StyledTabs\r\n        centered\r\n        value={value} \r\n        variant=\"fullWidth\"\r\n        indicatorColor=\"secondary\"\r\n        onChange={(event, index) => handleChange(index)} \r\n        aria-label=\"tabs\"\r\n      >\r\n        {tabs.map((tab, index) => (\r\n          <StyledTab key={index} label={tab} {...a11yProps(index)} />\r\n        ))}\r\n      </StyledTabs>\r\n    </div>\r\n  );\r\n};","import React, { useState, useContext } from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ShowEvaluators from './ShowEvaluators';\r\nimport ShowQuestionnaire from './ShowQuestionnaire';\r\nimport ShowTasks from './ShowTasks';\r\nimport ShowGeneral from './ShowGeneral';\r\n\r\nimport { AssessmentContext } from '../../../context/AssessmentContext';\r\nimport SelectAssessmentSvg from '../../../../../assets/instant_information.svg'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Tabs from '../../../../../components/Tabs'; \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center'\r\n  },\r\n  title: {\r\n    color: '#444'\r\n  },\r\n  svg: {\r\n    maxHeight: '350px'\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      textDecoration: 'underline'\r\n    }\r\n  },\r\n  containerRoot: {\r\n    height: '100%', \r\n    padding: theme.spacing(1)\r\n  },\r\n  content: {\r\n    padding: theme.spacing(1),\r\n    height: 'calc(100% - 45px)'\r\n  }\r\n}));\r\n\r\nexport default function ShowEvaluationPanel() {\r\n  \r\n  const controller = useContext(AssessmentContext);\r\n  const [evaluation] = controller.currentAssessmentController;\r\n  const [view, setView] = controller.viewController;\r\n\r\n  const handleCreateAssessment = () => {\r\n    if(view !== 'create') {\r\n      setView('create');\r\n    }\r\n  }\r\n\r\n  const getTab = () => {\r\n    return [\r\n      'General', \r\n      'Tasks',\r\n      'Questionnaire',\r\n      'View Evaluators'\r\n    ]\r\n  }\r\n\r\n  const getPanel = (index) => {\r\n    switch(index) {\r\n      case 0: return <ShowGeneral />; \r\n      case 1: return <ShowTasks />;\r\n      case 2: return <ShowQuestionnaire />;\r\n      case 3: return <ShowEvaluators />;\r\n      default: return <>Not Found</>;\r\n    }\r\n  }\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return evaluation.id ? \r\n    (\r\n      <div className={classes.containerRoot}>\r\n        <div className={classes.tabs}>\r\n          <Tabs\r\n            value={value}\r\n            handleChange={handleChange}\r\n            tabs={getTab()}\r\n          />\r\n        </div>\r\n        <div className={classes.content}> \r\n          {getPanel(value)} \r\n        </div>\r\n      </div>\r\n  ) : (\r\n    <div className={classes.container}>\r\n      <Typography \r\n        className={classes.title}\r\n        variant=\"h4\"\r\n      >\r\n        Select a Evaluation on the Left\r\n      </Typography>\r\n      <img \r\n        className={classes.svg}\r\n        src={SelectAssessmentSvg} \r\n        alt=\"Select some evaluation\" \r\n      /> \r\n      <Typography \r\n        className={classes.link}\r\n        variant=\"subtitle1\"\r\n        onClick={handleCreateAssessment}\r\n      >\r\n        Or Click here to add a New Evaluation\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const CreateAssessmentContext = createContext();\r\n\r\nexport default function CreateAssessmentProvider({ children }) {\r\n  \r\n  const detailsController = useState({ name: '', detail: '' });\r\n  const questionnaireController = useState({});\r\n  const tasksController = useState([]);\r\n  const userListController = useState([]);\r\n\r\n  const state = {\r\n    detailsController,\r\n    questionnaireController,\r\n    tasksController,\r\n    userListController\r\n  }\r\n\r\n  return (\r\n    <CreateAssessmentContext.Provider value={state}>\r\n      {children}\r\n    </CreateAssessmentContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function ListItemDefault({\r\n  onClick,\r\n  tooltipText,\r\n  primaryText,\r\n  secondaryText,\r\n  active,\r\n  onClicksecondaryAction,\r\n  iconSecondaryAction\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      border: '2px solid' + theme.palette.primary.main,\r\n      borderRadius: theme.spacing(1),\r\n      background: active ? theme.palette.primary.main : '#FFFFFF',\r\n      margin: theme.spacing(1)\r\n    },\r\n    name: {\r\n      fontSize: 16,\r\n      color: active ? '#FFFFFF' : theme.palette.primary.main\r\n    },\r\n    detail: {\r\n      fontSize: 12,\r\n      color: active ? '#FFFFFF' : theme.palette.primary.main\r\n    },\r\n    icon: {\r\n      color: active ? '#FFFFFF' : theme.palette.primary.main\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Tooltip title={tooltipText || 'No details'} arrow placement=\"top\">\r\n        <ListItem button onClick={onClick}>\r\n          <ListItemText \r\n            primary={<Typography className={classes.name}>{primaryText}</Typography>}\r\n            secondary={<Typography className={classes.detail} noWrap>{secondaryText}</Typography>}\r\n          />\r\n          {onClicksecondaryAction && (\r\n            <ListItemSecondaryAction onClick={onClicksecondaryAction}>\r\n              <IconButton className={classes.icon} edge=\"end\">\r\n                {iconSecondaryAction}\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          )}\r\n        </ListItem>\r\n      </Tooltip>\r\n    </Paper>\r\n  )\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    outline: 'none',\r\n    \r\n    width: '100%',\r\n    fontWeight: 'bold',\r\n    textTransform: 'uppercase',\r\n    border: '1px solid ' + theme.palette.primary.main,\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.spacing(1),\r\n\r\n    cursor: 'pointer',\r\n    fontSize: 14,\r\n\r\n    transition: 'all .3s',\r\n\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.contrastText,\r\n      color: theme.palette.primary.main,\r\n    },\r\n  }\r\n}))\r\n\r\nexport default function Button({ children, className, ...rest }) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <button className={clsx(classes.button, className)} {...rest}>\r\n      {children}\r\n    </button>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Dialog from '../../../../../components/Dialog';\r\nimport AlertMessage from '../../../../../components/AlertMessage';\r\nimport ListItemDefault from '../../../../../components/ListItemDefault';\r\nimport BlueCheckbox from '../../../../../components/BlueCheckbox';\r\nimport Button from '../../../../../components/Button';\r\n\r\nimport { loadEvaluatorsByEmail, loadProfiles, storeEvaluator } from '../../../../../routes';\r\n\r\nimport { RUNTIME_ERROR, CANCEL } from '../../../../../constants';\r\nimport { validateEmail, validateName } from '../../../../../utils';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textfield: {\r\n    marginTop: theme.spacing(1.5)\r\n  },\r\n  header: {\r\n    margin: 0,\r\n    padding: theme.spacing(1, 0),\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      textDecoration: 'underline'\r\n    }\r\n  },\r\n  loading: {\r\n    display: 'flex', \r\n    flexDirection: 'column',\r\n    justifyContent: 'center', \r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(1.5)\r\n  }\r\n}))\r\n\r\nconst CreateEvaluator = ({ handleClose, createEvaluator }) => {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [selecteds, setSelecteds] = useState([]);\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const handleChageName = event => {\r\n    const { value } = event.target;\r\n    value.length <= 100 && setName(value);\r\n  }\r\n\r\n  const handleChageEmail = event => {\r\n    const { value } = event.target;\r\n    value.length <= 150 && setEmail(value);\r\n  }\r\n\r\n  const handleClickProfile = (event, newProfile) => {\r\n    const { checked } = event.target;\r\n    if(checked) {\r\n      setSelecteds(prev => [...prev, newProfile]);\r\n    } else {\r\n      setSelecteds(prev => prev.filter(profile => profile.id !== newProfile.id));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadProfiles().then(data => {\r\n\r\n      setProfiles(prev => [...prev, ...data]);\r\n    }).catch(error => {\r\n\r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n      } else {\r\n        alert('Error on load Profiles');\r\n      }\r\n\r\n    })\r\n  }, [])\r\n\r\n  const withoutErrors = () => {\r\n    const errors = [];\r\n    if(!validateName(name)) {\r\n      errors.push('Please enter first and last name')\r\n    }\r\n    if(!validateEmail(email)) {\r\n      errors.push('Please enter a valid address');\r\n    }\r\n    setErrors(errors);\r\n    return errors.length === 0;\r\n  }\r\n\r\n  const submit = () => {\r\n    if(withoutErrors()) {\r\n      storeEvaluator({\r\n        name, email,\r\n        profiles_ids: selecteds.map(profile => Number(profile.id))\r\n      }).then(data => {\r\n\r\n        createEvaluator(data);\r\n        handleClose();\r\n      }).catch(error => {\r\n\r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          setErrors([error.detail]);\r\n        } else {\r\n          alert('Error on create evaluator');\r\n        }\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form onSubmit={e => { e.preventDefault(); submit(); }}>\r\n      <div className={classes.header}>\r\n        <Typography variant=\"body1\" noWrap>Create Evaluator</Typography>\r\n        <IconButton onClick={handleClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </div>\r\n      <AlertMessage open={errors.length > 0} type=\"error\">\r\n        {errors.join(', ')}\r\n      </AlertMessage>\r\n      <Typography className={classes.textfield} gutterBottom> Evaluator Name </Typography>\r\n      <TextField \r\n        id=\"name_evaluator\" \r\n        label=\"Evaluator Name\" \r\n        variant=\"outlined\"\r\n        value={name}\r\n        fullWidth\r\n        onChange={handleChageName}\r\n      />\r\n      <Typography className={classes.textfield} gutterBottom> Evaluator Email </Typography>\r\n      <TextField \r\n        id=\"email_evaluator\" \r\n        label=\"Evaluator Email\" \r\n        variant=\"outlined\"\r\n        type=\"email\"\r\n        value={email}\r\n        fullWidth\r\n        onChange={handleChageEmail}\r\n      />\r\n      <Typography className={classes.textfield} gutterBottom> Profiles </Typography>\r\n      <Grid container>\r\n        {profiles.map(profile => (\r\n          <Grid key={profile.id} item sm={4}>\r\n            <BlueCheckbox onClick={e => handleClickProfile(e, profile)}>\r\n              {profile.name}\r\n            </BlueCheckbox>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Button\r\n        className={classes.textfield}\r\n        type=\"submit\"\r\n      >\r\n        Create evaluator\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default function AddEvaluation({ handleClose, handleAdd }) {\r\n\r\n  const [evaluators, setEvaluators] = useState([]);\r\n  const [evaluator, setEvaluator] = useState({});\r\n  const [errors, setErrors] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [openCreateEvaluator, setOpenCreateEvaluator] = useState(false);\r\n\r\n  const handleChangeSearch = (event) => {\r\n    const { value } = event.target;\r\n    setLoading(true);\r\n    setQuery(value);\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if(query.length < 5) {\r\n      return;\r\n    }\r\n    \r\n    loadEvaluatorsByEmail({\r\n      query\r\n    }).then(data => {\r\n\r\n      setEvaluators(data);\r\n    }).catch(error => {\r\n\r\n      if(Number(error.id) === CANCEL) {\r\n        return;\r\n      }\r\n\r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n      } else {\r\n        alert('Error on load Designers');\r\n      }\r\n\r\n    }).finally(() => {\r\n\r\n      setLoading(false);\r\n    })\r\n  }, [query])\r\n\r\n  const handleOpenCreateEvaluator = () => {\r\n    setOpenCreateEvaluator(true);\r\n  }\r\n\r\n  const handleCloseCreateEvaluator = () => {\r\n    setOpenCreateEvaluator(false);\r\n  }\r\n\r\n  const handleChangeEvaluator = evaluator => {\r\n    setEvaluator(evaluator);\r\n  }\r\n\r\n  const createEvaluator = (evaluator) => {\r\n    setLoading(true);\r\n    setQuery(evaluator.email);\r\n    setEvaluator(evaluator);\r\n  }\r\n\r\n  const validateEvaluator = evaluator => evaluator.id ? true : false;\r\n\r\n  const withoutErrors = () => {\r\n    const errors = [];\r\n    if(!validateEvaluator(evaluator)) {\r\n      errors.push('Please select some evaluator')\r\n    }\r\n    setErrors(errors);\r\n    return errors.length === 0;\r\n  }\r\n  \r\n  const submit = () => {\r\n    if(withoutErrors()) {\r\n      handleAdd(evaluator);\r\n      handleClose();\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      handleClose={handleClose}\r\n      title=\"Add Evaluator\"\r\n      submitText=\"Add Evaluator\"\r\n      submit={submit}\r\n      maxWidth=\"sm\"\r\n    >\r\n      <AlertMessage open={errors.length > 0} type=\"error\">\r\n        {errors.join(', ')}\r\n      </AlertMessage>\r\n      <Typography gutterBottom> \r\n        Evaluator {evaluator.name && `: \"${evaluator.name}\"`}\r\n      </Typography>\r\n      <TextField \r\n        id=\"Evaluator\" \r\n        label=\"Evaluator Email / Name\" \r\n        variant=\"outlined\"\r\n        value={query}\r\n        InputProps={{ endAdornment: \r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={handleOpenCreateEvaluator}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </InputAdornment>,\r\n        }}\r\n        fullWidth\r\n        onChange={handleChangeSearch}\r\n      />\r\n      {loading ? (\r\n        <div className={classes.loading}>\r\n          <CircularProgress />\r\n          <span className={classes.textfield}> \r\n            Please enter the first 5 characters of the email or name\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        evaluators.length > 0 ? (\r\n          <List className={classes.textfield}>\r\n            <Grid container>\r\n              {evaluators.map(item => (\r\n                <Grid key={item.id} item sm={6}>\r\n                  <ListItemDefault\r\n                    primaryText={item.name}\r\n                    secondaryText={item.email}\r\n                    tooltipText={item.email}\r\n                    onClick={() => handleChangeEvaluator(item)}\r\n                    active={item.id === evaluator.id}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </List>\r\n        ) : (\r\n          <Typography className={classes.textfield}> \r\n            No evaluators found, type a valid email above or \r\n            <span onClick={handleOpenCreateEvaluator} className={classes.link}> click here </span> \r\n            to add a new designer\r\n          </Typography>\r\n        )\r\n      )}\r\n      <Collapse in={openCreateEvaluator}>\r\n        <CreateEvaluator handleClose={handleCloseCreateEvaluator} createEvaluator={createEvaluator} />\r\n      </Collapse>\r\n    </Dialog>\r\n  );\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { CreateAssessmentContext } from '../../../context/CreateAssessmentContext';\r\nimport { AssessmentContext } from '../../../context/AssessmentContext';\r\nimport CompletedStepsSvg from '../../../../../assets/completed_steps.svg';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport List from '@material-ui/core/List';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/AddCircle';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport AddEvaluator from './AddEvaluator';\r\n\r\nimport ListItemDefault from '../../../../../components/ListItemDefault';\r\nimport { GlobalContext } from '../../../../../context/GlobalContext';\r\nimport { RUNTIME_ERROR } from '../../../../../constants';\r\nimport { \r\n  loadQuestionnairesByManager, \r\n  loadQuestionsByQuestionnaire, \r\n  loadWebsitesByManager,\r\n  loadTasksByWebsite,\r\n  loadEvaluatorsByProfile,\r\n  loadProfiles,\r\n  storeEvaluation\r\n} from '../../../../../routes';\r\n\r\nconst Divider = ({...props}) => <hr {...props}></hr>\r\n\r\nconst AssessmentDetails = () => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      padding: theme.spacing(2),\r\n      width: '80%'\r\n    },\r\n    item: {\r\n      marginTop: theme.spacing(1)\r\n    }\r\n  }));\r\n\r\n  const { detailsController } = useContext(CreateAssessmentContext);\r\n  const [ details, setDetails ] = detailsController;\r\n  const { name, detail } = details;\r\n\r\n  const handleName = e => {\r\n    const { value } = e.target;\r\n    if(value.length <= 100) {\r\n      setDetails({...details, name: value});\r\n    }\r\n  }\r\n\r\n  const handleDetails = e => {\r\n    const { value } = e.target;\r\n    if(value.length <= 300) {\r\n      setDetails({...details, detail: value});\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField \r\n        className={classes.item}\r\n        id=\"Name\" \r\n        label=\"Name\" \r\n        value={name}\r\n        required\r\n        fullWidth\r\n        onChange={handleName}\r\n      />\r\n      <TextField \r\n        className={classes.item}\r\n        id=\"Detail\"\r\n        label=\"Details\"\r\n        value={detail}\r\n        multiline\r\n        rows=\"6\"\r\n        fullWidth\r\n        onChange={handleDetails}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ChooseQuestionnaire = () => {\r\n\r\n  return (\r\n    <Grid container >\r\n      <Grid item sm={4}>\r\n        <ListQuestionnaires />\r\n      </Grid>\r\n      <Grid item sm={8}>\r\n        <ListQuestions />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst ListQuestionnaires = () => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n      height: 350,\r\n      overflowY: 'auto',\r\n      padding: 10, \r\n    },\r\n    header: {\r\n      color: '#777'\r\n    },\r\n  }))\r\n\r\n  const { questionnaireController } = useContext(CreateAssessmentContext);\r\n  const [ selectedQuestionnaire, setSelectedQuestionnaire ] = questionnaireController;\r\n\r\n  const { managerController } = useContext(GlobalContext);\r\n  const [ manager ] = managerController;\r\n\r\n  const [questionnaires, setQuestionnaires] = useState([]);\r\n\r\n  const handleSelectQuestionnaire = (questionnaire) => {\r\n    if(selectedQuestionnaire !== questionnaire) {\r\n      setSelectedQuestionnaire(questionnaire)\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    loadQuestionnairesByManager({\r\n      manager_id: Number(manager.id)\r\n    }).then(data => {\r\n\r\n      setQuestionnaires([...data.available, ...data.unavailable]);\r\n    }).catch(error => {\r\n\r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n      } else {\r\n        alert('Error on load Questionnaires');\r\n      }\r\n\r\n    })\r\n  }, [manager]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root} component=\"nav\">\r\n      <Typography variant=\"body1\" align=\"center\" className={classes.header}>\r\n        QUESTIONNAIRE LIST\r\n      </Typography>\r\n      <Divider />\r\n      {questionnaires.map(questionnaire => (\r\n        <ListItemDefault\r\n          key={questionnaire.id}\r\n          primaryText={questionnaire.name}\r\n          secondaryText={questionnaire.detail}\r\n          tooltipText={questionnaire.detail}\r\n          onClick={() => handleSelectQuestionnaire(questionnaire)}\r\n          active={questionnaire === selectedQuestionnaire}\r\n        />\r\n      ))}\r\n    </List>\r\n  )\r\n}\r\n\r\nconst ListQuestions = () => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n      height: 350,\r\n      overflowY: 'auto',\r\n      padding: 10, \r\n    },\r\n    header: {\r\n      color: '#777'\r\n    }\r\n  }));\r\n\r\n  const { questionnaireController } = useContext(CreateAssessmentContext);\r\n  const [ questionnaire ] = questionnaireController;\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(questionnaire.id) {\r\n      loadQuestionsByQuestionnaire({\r\n        id: Number(questionnaire.id)\r\n      }).then(data => {\r\n  \r\n        setQuestions(data);\r\n      }).catch(error => {\r\n  \r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          alert(error.detail);\r\n        } else {\r\n          alert('Error on load Questions');\r\n        }\r\n  \r\n      })\r\n    }\r\n  }, [questionnaire]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root} component=\"nav\">\r\n      <Typography variant=\"body1\" align=\"center\" className={classes.header}>\r\n        QUESTION LIST\r\n      </Typography>\r\n      <Divider />\r\n      <Grid container>\r\n        {questions.map(question => (\r\n          <Grid key={question.id} item sm={6}>\r\n            <ListItemDefault\r\n              key={question.id}\r\n              primaryText={question.criterion}\r\n              secondaryText={question.text}\r\n              tooltipText={question.text}\r\n              onClick={() => {}}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </List>\r\n  )\r\n}\r\n\r\nconst ChooseTasks = () => {\r\n\r\n  const [website, setWebsite] = useState({});\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item sm={4}>\r\n        <WebsiteList currentWebsite={website} setWebsite={setWebsite} />\r\n      </Grid>\r\n      <Grid item sm={8}>\r\n        <TaskList website={website} />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst WebsiteList = ({ currentWebsite, setWebsite }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n      height: 350,\r\n      overflowY: 'auto',\r\n      padding: 10, \r\n    },\r\n    header: {\r\n      color: '#777'\r\n    },\r\n  }))\r\n\r\n  const { managerController } = useContext(GlobalContext);\r\n  const [ manager ] = managerController;\r\n\r\n  const [websites, setWebsites] = useState([]);\r\n\r\n  const handleSelectWebsite = website => {\r\n    setWebsite(website);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadWebsitesByManager({\r\n      manager_id: Number(manager.id)\r\n    }).then(data => {\r\n\r\n      setWebsites(data);\r\n    }).catch(error => {\r\n\r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n      } else {\r\n        alert('Error on load Questions');\r\n      }\r\n\r\n    })\r\n  }, [manager]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root} component=\"nav\">\r\n      <Typography variant=\"body1\" align=\"center\" className={classes.header}>\r\n        WEBSITE LIST\r\n      </Typography>\r\n      <Divider />\r\n      {websites.map(website => (\r\n        <ListItemDefault\r\n          key={website.id}\r\n          primaryText={website.name}\r\n          secondaryText={website.url}\r\n          tooltipText={website.url}\r\n          active={currentWebsite === website}\r\n          onClick={() => handleSelectWebsite(website)}\r\n        />\r\n      ))}\r\n    </List>\r\n  )\r\n}\r\n\r\nconst TaskItem = ({ task }) => {\r\n  const { tasksController } = useContext(CreateAssessmentContext);\r\n  const [ tasks, setTasks ] = tasksController;\r\n\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  const handleClickTask = () => {\r\n    if(selected) {\r\n      setTasks(tasks.filter(selectedTask => selectedTask.id !== task.id ))\r\n      setSelected(false);\r\n    } else {\r\n      setTasks([...tasks, task])\r\n      setSelected(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid item sm={6}>\r\n      <ListItemDefault\r\n        primaryText={task.name}\r\n        secondaryText={task.detail}\r\n        tooltipText={task.detail}\r\n        onClick={handleClickTask}\r\n        active={selected}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst TaskList = ({ website }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n      height: 350,\r\n      overflowY: 'auto',\r\n      padding: 10, \r\n    },\r\n    header: {\r\n      color: '#777'\r\n    }\r\n  }))\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(website.id) {\r\n      loadTasksByWebsite({\r\n        website_id: Number(website.id)\r\n      }).then(data => {\r\n        \r\n        setTasks([...data.available, ...data.unavailable]);\r\n      }).catch(error => {\r\n  \r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          alert(error.detail);\r\n        } else {\r\n          alert('Error on load Tasks');\r\n        }\r\n  \r\n      })\r\n    }\r\n  }, [website])\r\n\r\n  const classes = useStyles();\r\n    \r\n  return (\r\n    <List className={classes.root} component=\"nav\">\r\n      <Typography variant=\"body1\" align=\"center\" className={classes.header}>\r\n        TASK LIST\r\n      </Typography>\r\n      <Divider />\r\n      <Grid container>\r\n        {tasks.map(task => (\r\n          <TaskItem key={task.id} task={task} />\r\n        ))}\r\n      </Grid>\r\n    </List>\r\n    )\r\n}\r\n\r\nconst ChooseGroups = () => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '80%',\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n      height: 350,\r\n      overflowY: 'auto',\r\n      padding: 10, \r\n    },\r\n    chip: {\r\n      marginTop: theme.spacing(1), \r\n      marginRight: theme.spacing(1) \r\n    },\r\n    chipAdd: {\r\n      marginTop: theme.spacing(1), \r\n      marginRight: theme.spacing(1) ,\r\n      background: '#99FF99'\r\n    },\r\n    header: {\r\n      color: '#777'\r\n    },\r\n  }));\r\n\r\n  const { userListController } = useContext(CreateAssessmentContext);\r\n  const [selectedProfiles, setSelectedProfiles] = useState([]);\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [userList, setUserList] = userListController;\r\n  const [openAddEvaluator, setOpenAddEvaluator] = useState(false);\r\n\r\n  const union = (oldUsers, newUsers, newProfile_id) => {\r\n    if(!newProfile_id) {\r\n      return [...oldUsers, {...newUsers, profile_ids: [0], count: Infinity }];\r\n    }\r\n\r\n    if(oldUsers.length === 0) {\r\n      return newUsers.map(user => ({...user, profile_ids: [newProfile_id], count: 1}))\r\n    }\r\n\r\n    if(newUsers.length === 0) {\r\n      return oldUsers;\r\n    }\r\n\r\n    const oldUsersIds = oldUsers.map(user => user.id);\r\n    const newUsersIds = newUsers.map(user => user.id);\r\n\r\n    const A = oldUsers.filter(user => !newUsersIds.includes(user.id));\r\n    const B = newUsers.filter(user => !oldUsersIds.includes(user.id));\r\n    const AB = oldUsers.filter(user => newUsersIds.includes(user.id));\r\n\r\n    return [\r\n      ...A, \r\n      ...B.map(user => ({...user, profile_ids: [newProfile_id], count: 1})),\r\n      ...AB.map(user => ({...user, profile_ids: [...user.profile_ids, newProfile_id], count: user.count + 1}))\r\n    ]\r\n  }\r\n\r\n  const loadEvaluators = async (id) => {\r\n    loadEvaluatorsByProfile({\r\n      id: Number(id)\r\n    }).then(data => {\r\n\r\n      setUserList(union(userList, data, id));\r\n    }).catch(error => {\r\n\r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n      } else {\r\n        alert('Error on load Evaluators');\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  const updateUsers = (id) => {\r\n    setUserList(userList.map(user => {\r\n      if(!user.profile_ids.includes(id)) {\r\n        return user;\r\n      } else {\r\n        return {...user, count: user.count - 1};\r\n      }\r\n    }).filter(user => user.count > 0));\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadProfiles().then(data => {\r\n\r\n      setProfiles(data);\r\n    }).catch(error => {\r\n\r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n      } else {\r\n        alert('Error on load Profiles');\r\n      }\r\n\r\n    });\r\n  }, []);\r\n\r\n  const handleSelectetProfile = (newProfile) => {\r\n    if(!newProfile) return;\r\n    loadEvaluators(newProfile.id);\r\n    setSelectedProfiles([...selectedProfiles, newProfile]);\r\n    setProfiles(profiles.filter(profile => profile.id !== newProfile.id));\r\n  }\r\n\r\n  const handleRemoveProfile = (oldProfile) => {\r\n    updateUsers(oldProfile.id);\r\n    setSelectedProfiles(selectedProfiles.filter(profile => profile.id !== oldProfile.id));\r\n    setProfiles([...profiles, oldProfile]);\r\n  } \r\n\r\n  const handleRemoveUser = (oldUser) => {\r\n    setUserList(userList.filter(user => user.id !== oldUser.id));\r\n  }\r\n\r\n  const handleAddUser = (newUser) => {\r\n    if(!userList.some(user => user.id === newUser.id)) {\r\n      setUserList(union(userList, newUser));\r\n    }\r\n  }\r\n\r\n  const handleOpenAddEvaluator = () => {\r\n    setOpenAddEvaluator(true);\r\n  }\r\n\r\n  const handleCloseAddEvaluator = () => {\r\n    setOpenAddEvaluator(false);\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Autocomplete\r\n        autoHighlight\r\n        clearOnEscape\r\n        options={profiles}\r\n        getOptionLabel={profile => profile.name}\r\n        onChange={(event, newValue) => handleSelectetProfile(newValue)}\r\n        renderInput={(params) => <TextField {...params} label=\"profile name\" variant=\"outlined\" />}\r\n      />\r\n      {selectedProfiles.length > 0 && (\r\n        <List component=\"nav\">\r\n          <Typography variant=\"body1\" align=\"center\" className={classes.header}>\r\n            SELECTED PROFILES\r\n          </Typography>\r\n          <Divider />\r\n          <Grid container>\r\n            {selectedProfiles.map(profile => (\r\n              <Grid key={profile.id} item sm={4}>\r\n                <ListItemDefault\r\n                  primaryText={profile.name}\r\n                  secondaryText={profile.detail}\r\n                  tooltipText={profile.detail}\r\n                  onClick={() => handleRemoveProfile(profile)}\r\n                  onClicksecondaryAction={() => handleRemoveProfile(profile)}\r\n                  iconSecondaryAction={<CancelIcon />}\r\n                  active\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </List>\r\n      )}\r\n      <List component=\"nav\">\r\n        <Typography variant=\"body1\" align=\"center\" className={classes.header}>\r\n          EVALUATORS LIST\r\n        </Typography>\r\n        <Divider />\r\n        <Chip\r\n          className={classes.chipAdd}\r\n          onClick={handleOpenAddEvaluator}\r\n          label=\"Add Evaluator\"\r\n          icon={<AddIcon />}\r\n        />\r\n        {userList.map(user => (\r\n          <Chip\r\n            key={user.id}\r\n            color=\"primary\"\r\n            className={classes.chip}\r\n            label={user.email}\r\n            onDelete={() => handleRemoveUser(user)}\r\n          />\r\n        ))}\r\n      </List>\r\n      {openAddEvaluator && <AddEvaluator handleClose={handleCloseAddEvaluator} handleAdd={handleAddUser} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Confimation = () => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n      width: '100%',\r\n      height: 350,\r\n      overflowY: 'auto',\r\n      padding: 10,\r\n    },\r\n    header: {\r\n      color: '#777'\r\n    },\r\n    value: {\r\n      color: '#333'\r\n    },\r\n  }))\r\n\r\n  const controller = useContext(CreateAssessmentContext);\r\n  const [ details ] = controller.detailsController;\r\n  const [ tasks ] = controller.tasksController;\r\n  const [ questionnaire ] = controller.questionnaireController\r\n  const [ evaluators ] = controller.userListController;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"body1\" align=\"center\" className={classes.header}>\r\n          INFORMATIONS\r\n        </Typography>\r\n      <Typography className={classes.value} variant=\"body1\" component=\"p\">\r\n        Name: {details.name}\r\n      </Typography>\r\n      <Typography className={classes.value} variant=\"subtitle1\" component=\"p\">\r\n        Details: {details.detail}\r\n      </Typography>\r\n      <Divider />\r\n      <Typography variant=\"body1\" align=\"center\" className={classes.header}>\r\n        QUESTIONNAIRE\r\n      </Typography>\r\n      <Typography className={classes.value} variant=\"body1\" component=\"p\">\r\n        Name: {questionnaire.name}\r\n      </Typography>\r\n      <Typography className={classes.value} variant=\"subtitle1\" component=\"p\">\r\n        Details: {questionnaire.detail}\r\n      </Typography>\r\n      <Divider />\r\n      <List component=\"nav\">\r\n        <Typography variant=\"body1\" align=\"center\" className={classes.header}>\r\n          TASKS\r\n        </Typography>\r\n        <Grid container>\r\n          {tasks.map(task => (\r\n            <Grid key={task.id} item sm={4}>\r\n              <ListItemDefault\r\n                primaryText={task.name}\r\n                secondaryText={task.detail}\r\n                tooltipText={task.detail}\r\n                onClick={() => {}}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\">\r\n        <Typography variant=\"body1\" align=\"center\" className={classes.header}>\r\n          EVALUATORS\r\n        </Typography>\r\n        <Grid container>\r\n          {evaluators.map(evaluator => (\r\n            <Grid key={evaluator.id} item sm={4}>\r\n              <ListItemDefault\r\n                primaryText={evaluator.name}\r\n                secondaryText={evaluator.email}\r\n                tooltipText={evaluator.email}\r\n                onClick={() => {}}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function CreateEvaluation() {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    backButton: {\r\n      marginRight: theme.spacing(4),\r\n    },\r\n    instructions: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n      height: 350,\r\n      display: 'flex',\r\n      justifyContent: 'center'\r\n    },\r\n    finalText: {\r\n      display: 'flex',\r\n      justifyContent: 'center'\r\n    },\r\n    finalContainer: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n      height: 350,\r\n    },\r\n    image: {\r\n      display: 'block', \r\n      marginLeft: 'auto', \r\n      marginRight: 'auto', \r\n      width: '50%'\r\n    },\r\n    buttons: {\r\n      display: 'flex',\r\n      alignItems: 'space-between',\r\n      justifyContent: 'center',\r\n    }\r\n  }));\r\n  \r\n  const getSteps = () => {\r\n    return [\r\n      'Enter name and details about your evaluation', \r\n      'Choose the tasks to be evaluated',\r\n      'Choose a questionnaire', \r\n      'Choose evaluators',\r\n      'Confimation'\r\n    ];\r\n  }\r\n\r\n  const { viewController, currentAssessmentController } = useContext(AssessmentContext);\r\n  const [ currentEvaluation, setCurrentEvaluation ] = currentAssessmentController;\r\n  const [ view, setView ] = viewController;\r\n\r\n  const controller = useContext(CreateAssessmentContext);\r\n  const [ details ] = controller.detailsController;\r\n  const [ tasks ] = controller.tasksController;\r\n  const [ questionnaire ] = controller.questionnaireController\r\n  const [ evaluators ] = controller.userListController;\r\n\r\n  const conditions = [\r\n    details.name.length > 5,\r\n    tasks.length > 0,\r\n    questionnaire.id !== undefined,\r\n    evaluators.length > 0\r\n  ]\r\n\r\n  const completeStep = step => conditions[step];\r\n\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return <AssessmentDetails />;\r\n      case 1:\r\n        return <ChooseTasks />;\r\n      case 2:\r\n        return <ChooseQuestionnaire />;\r\n      case 3:\r\n        return <ChooseGroups />;\r\n      case 4:\r\n        return <Confimation />\r\n      default:\r\n        return 'Unknown stepIndex';\r\n    }\r\n  }\r\n\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const Alert = (props) => <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n\r\n  const [dataSnackbar, setDataSnackbar] = useState({\r\n    open: Boolean(currentEvaluation.id),\r\n    severity: 'warning',\r\n    message: `Make sure the changes to the evaluation \"${currentEvaluation.name}\" have been saved`\r\n  });\r\n\r\n  const handleOpenSnackbar = (severity, message) => {\r\n    setDataSnackbar({\r\n      open: true,\r\n      severity,\r\n      message\r\n    });\r\n  }\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setDataSnackbar({\r\n      ...dataSnackbar,\r\n      open: false,\r\n    });\r\n  }\r\n\r\n  const backToShow = () => {\r\n    if(view === 'create') {\r\n      setView('show');\r\n    }\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    storeEvaluation({\r\n      name: details.name,\r\n      detail: details.detail,\r\n      questionnaire_id: Number(questionnaire.id),\r\n      tasks_id: tasks.map(task => Number(task.id)),\r\n      evaluators_id: evaluators.map(evaluator => Number(evaluator.id))\r\n    }).then(data => {\r\n\r\n      setCurrentEvaluation(data);\r\n\r\n      handleOpenSnackbar('success', 'You have successfully created the Evaluation!');\r\n    }).catch(error => {\r\n\r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        handleOpenSnackbar('error', error.detail);\r\n      } else {\r\n        handleOpenSnackbar('error', 'The Evaluation was not created');\r\n      }\r\n\r\n    }).finally(() => {\r\n\r\n      handleNext();\r\n    })\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <Stepper activeStep={activeStep} alternativeLabel>\r\n          {steps.map(label => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n          autoHideDuration={6000}\r\n          open={dataSnackbar.open}\r\n          onClose={handleCloseSnackbar}\r\n        >\r\n          <Alert onClose={handleCloseSnackbar} severity={dataSnackbar.severity}>\r\n            {dataSnackbar.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <div>\r\n          {activeStep === steps.length ? (\r\n            <div>\r\n              <div className={classes.finalContainer}>\r\n                <img \r\n                  className={classes.image}\r\n                  src={CompletedStepsSvg} \r\n                  alt=\"All steps have been completed!\" \r\n                />\r\n                <Typography \r\n                  className={classes.finalText} \r\n                  variant=\"h5\"\r\n                >\r\n                  All steps have been completed!\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.buttons}>\r\n                <Button onClick={backToShow}>View Assessments</Button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div className={classes.instructions}>\r\n                {getStepContent(activeStep)}\r\n              </div>\r\n              <div className={classes.buttons}>\r\n                <Button\r\n                  disabled={activeStep === 0}\r\n                  color=\"primary\"\r\n                  onClick={handleBack}\r\n                  className={classes.backButton}\r\n                >\r\n                  Back\r\n                </Button>\r\n                {activeStep < steps.length - 1 ? (\r\n                  <Button\r\n                    disabled={!completeStep(activeStep)}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    onClick={handleNext}>\r\n                    Next\r\n                  </Button>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={handleConfirm}>\r\n                    Confirm\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Show from './show';\r\nimport CreateEvaluation from './CreateEvaluation';\r\nimport CreateAssessmentProvider from '../../context/CreateAssessmentContext';\r\nimport { AssessmentContext } from '../../context/AssessmentContext';\r\n\r\nexport default function RightPanel() {\r\n\r\n  const { viewController } = useContext(AssessmentContext);\r\n  const [ view ] = viewController;\r\n\r\n  const ViewMode = {\r\n    'show': <Show />,\r\n    'create': \r\n    <CreateAssessmentProvider>\r\n      <CreateEvaluation />\r\n    </CreateAssessmentProvider>\r\n  }\r\n\r\n  return ViewMode[view];\r\n}\r\n","import React from 'react';\r\nimport AssessmentProvider from './context/AssessmentContext';\r\nimport AssessmentsList from './components/AssessmentsList'\r\nimport RightPanel from './components/RightPanel';\r\n\r\nexport default function PanelAssessments({ classes }) {\r\n  return (\r\n    <AssessmentProvider>\r\n      <div className={classes.list}>\r\n        <AssessmentsList /> \r\n      </div>\r\n      <div className={classes.content}>\r\n        <RightPanel />\r\n      </div>\r\n    </AssessmentProvider>\r\n  );\r\n}\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const WebsiteContext = createContext();\r\n\r\nexport default function WebsiteProvider({ children }) {\r\n  \r\n  const websiteController = useState({});\r\n\r\n  const value = {\r\n    websiteController\r\n  }\r\n\r\n  return (\r\n    <WebsiteContext.Provider value={value}>\r\n      {children}\r\n    </WebsiteContext.Provider>\r\n  );\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { WebsiteContext } from '../../context/WebsiteContext';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { storeWebsite, storeDesigner, loadDesignersByEmail } from '../../../../routes';\r\n\r\nimport AlertMessage from '../../../../components/AlertMessage';\r\nimport Dialog from '../../../../components/Dialog';\r\nimport ListItemDefault from '../../../../components/ListItemDefault';\r\nimport Button from '../../../../components/Button';\r\n\r\nimport { RUNTIME_ERROR, CANCEL } from '../../../../constants';\r\nimport { validateUrl, validateEmail, validateName } from '../../../../utils';\r\nimport { GlobalContext } from '../../../../context/GlobalContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textfield: {\r\n    marginTop: theme.spacing(1.5)\r\n  },\r\n  header: {\r\n    margin: 0,\r\n    padding: theme.spacing(1, 0),\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      textDecoration: 'underline'\r\n    }\r\n  },\r\n  loading: {\r\n    display: 'flex', \r\n    flexDirection: 'column',\r\n    justifyContent: 'center', \r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(1.5)\r\n  }\r\n}));\r\n\r\nconst CreateDesigner = ({ handleClose, createDesigner }) => {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const handleChageName = event => {\r\n    const { value } = event.target;\r\n    value.length <= 100 && setName(value);\r\n  }\r\n\r\n  const handleChageEmail = event => {\r\n    const { value } = event.target;\r\n    value.length <= 150 && setEmail(value);\r\n  }\r\n\r\n  const withoutErrors = () => {\r\n    const errors = [];\r\n    if(!validateName(name)) {\r\n      errors.push('Please enter first and last name')\r\n    }\r\n    if(!validateEmail(email)) {\r\n      errors.push('Please enter a valid address');\r\n    }\r\n    setErrors(errors);\r\n    return errors.length === 0;\r\n  }\r\n\r\n  const submit = () => {\r\n    if(withoutErrors()) {\r\n      storeDesigner({\r\n        name, email\r\n      }).then(data => {\r\n\r\n        createDesigner(data);\r\n      }).catch(error => {\r\n\r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          setErrors([error.detail]);\r\n        } else {\r\n          alert('Error on load Profiles');\r\n        }\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <form onSubmit={e => { e.preventDefault(); submit(); }}>\r\n      <div className={classes.header}>\r\n        <Typography variant=\"body1\" noWrap>Create Designer</Typography>\r\n        <IconButton onClick={handleClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </div>\r\n      <AlertMessage open={errors.length > 0} type=\"error\">\r\n        {errors.join(', ')}\r\n      </AlertMessage>\r\n      <Typography className={classes.textfield} gutterBottom> Designer Name </Typography>\r\n      <TextField \r\n        id=\"name_designer\" \r\n        label=\"Designer Name\" \r\n        variant=\"outlined\"\r\n        value={name}\r\n        fullWidth\r\n        onChange={handleChageName}\r\n      />\r\n      <Typography className={classes.textfield} gutterBottom> Designer Email </Typography>\r\n      <TextField \r\n        id=\"email_designer\" \r\n        label=\"Designer Email\" \r\n        variant=\"outlined\"\r\n        type=\"email\"\r\n        value={email}\r\n        fullWidth\r\n        onChange={handleChageEmail}\r\n      />\r\n      <Button\r\n        className={classes.textfield}\r\n        type=\"submit\"\r\n      >\r\n        Create Designer\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default function CreateWebsite({ handleClose }) {\r\n  const { websiteController } = useContext(WebsiteContext);\r\n  const [currentWebsite, setCurrentWebsite] = websiteController;\r\n\r\n  const { managerController } = useContext(GlobalContext);\r\n  const [ manager ] = managerController;\r\n\r\n  const [name, setName] = useState('');\r\n  const [url, setUrl] = useState('');\r\n  const [designers, setDesigners] = useState([]);\r\n  const [designer, setDesigner] = useState({});\r\n  const [errors, setErrors] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [openCreateDesigner, setOpenCreateDesigner] = useState(false);\r\n \r\n  const validName = name => name.length >= 3 ? true : false;\r\n  const validDesigner = designer => designer.id ? true : false;\r\n\r\n  const handleChageName = event => {\r\n    const { value } = event.target;\r\n    value.length <= 100 && setName(value);\r\n  }\r\n\r\n  const handleChageUrl = event => {\r\n    const { value } = event.target;\r\n    value.length <= 150 && setUrl(value);\r\n  }\r\n\r\n  const handleChangeDesigner = designer => {\r\n    setDesigner(designer);\r\n  }\r\n\r\n  const handleOpenCreateDesigner = () => {\r\n    setOpenCreateDesigner(true);\r\n  }\r\n\r\n  const handleCloseCreateDesigner = () => {\r\n    setOpenCreateDesigner(false);\r\n  }\r\n\r\n  const handleChangeSearch = event => {\r\n\r\n    const query = event.target.value;\r\n    setLoading(true);\r\n    setQuery(query);\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if(query.length < 5) {\r\n      return;\r\n    }\r\n\r\n    loadDesignersByEmail({\r\n      query\r\n    }).then(data => {\r\n\r\n      setDesigners(data);\r\n    }).catch(error => {\r\n\r\n      if(Number(error.id) === CANCEL) {\r\n        return;\r\n      }\r\n\r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n      } else {\r\n        alert('Error on load Designers');\r\n      }\r\n\r\n    }).finally(() => {\r\n\r\n      setLoading(false);\r\n    })\r\n  }, [query])\r\n\r\n  const createDesigner = designer => {\r\n    setLoading(true);\r\n    setQuery(designer.email);\r\n    setDesigner(designer);\r\n    handleCloseCreateDesigner();\r\n  }\r\n\r\n  const withoutErrors = () => {\r\n    const errors = [];\r\n    if(!validName(name)) {\r\n      errors.push('Please enter a name with at least 3 characters')\r\n    }\r\n    if(!validateUrl(url)) {\r\n      errors.push('Please enter a valid address');\r\n    }\r\n    if(!validDesigner(designer)) {\r\n      errors.push('Please select a designer')\r\n    }\r\n    setErrors(errors);\r\n    return errors.length === 0;\r\n  }\r\n\r\n  const submit = () => {\r\n    if(withoutErrors()) {\r\n      storeWebsite({\r\n        name, url,\r\n        designer_id: Number(designer.id),\r\n        manager_id: Number(manager.id)\r\n      }).then(data => {\r\n\r\n        setCurrentWebsite(data);\r\n      }).catch(error => {\r\n\r\n        if(Number(error.id) !== RUNTIME_ERROR) {\r\n          alert(error.detail);\r\n        } else {\r\n          alert('Error on store website');\r\n        }\r\n\r\n      }).finally(() => {\r\n\r\n        handleClose();\r\n      });\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      title=\"Add Website\"\r\n      submitText=\"Add Website\"\r\n      handleClose={handleClose}\r\n      submit={submit}\r\n      maxWidth=\"sm\"\r\n    >\r\n      <AlertMessage open={currentWebsite.id} type=\"warning\">\r\n        Make sure the changes to the website \"{currentWebsite.name}\" have been saved\r\n      </AlertMessage>\r\n      <AlertMessage open={errors.length > 0} type=\"error\">\r\n        {errors.join(', ')}\r\n      </AlertMessage>\r\n      <Typography className={classes.textfield} gutterBottom> Website Name </Typography>\r\n      <TextField \r\n        id=\"name_website\" \r\n        label=\"ex: USP website\" \r\n        variant=\"outlined\"\r\n        value={name}\r\n        fullWidth\r\n        onChange={handleChageName}\r\n      />\r\n      <Typography className={classes.textfield} gutterBottom> Website address </Typography>\r\n      <TextField \r\n        id=\"url_website\" \r\n        label=\"ex: https://www5.usp.br\" \r\n        variant=\"outlined\"\r\n        type=\"url\"\r\n        value={url}\r\n        fullWidth\r\n        onChange={handleChageUrl}\r\n      />\r\n      <Typography className={classes.textfield} gutterBottom> \r\n        Designer{designer.name && `: \"${designer.name}\"`}\r\n      </Typography>\r\n      <TextField \r\n        id=\"designer\" \r\n        label=\"Designer Email / Name\" \r\n        variant=\"outlined\"\r\n        value={query}\r\n        InputProps={{ endAdornment: \r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={handleOpenCreateDesigner}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </InputAdornment>,\r\n        }}\r\n        fullWidth\r\n        onChange={handleChangeSearch}\r\n      />\r\n      {loading ? (\r\n        <div className={classes.loading}>\r\n          <CircularProgress />\r\n          <span className={classes.textfield}> \r\n            Please enter the first 5 characters of the email or name\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        designers.length > 0 ? (\r\n          <List className={classes.textfield}>\r\n            <Grid container>\r\n              {designers.map(item => (\r\n                <Grid key={item.id} item sm={6}>\r\n                  <ListItemDefault\r\n                    primaryText={item.name}\r\n                    secondaryText={item.email}\r\n                    tooltipText={item.email}\r\n                    onClick={() => handleChangeDesigner(item)}\r\n                    active={item.id === designer.id}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </List>\r\n        ) : (\r\n          <Typography className={classes.textfield}> \r\n            No designers found, type a valid email above or \r\n            <span onClick={handleOpenCreateDesigner} className={classes.link}> click here </span> \r\n            to add a new designer\r\n          </Typography>\r\n        )\r\n      )}\r\n      {openCreateDesigner && <Divider />}\r\n      <Collapse in={openCreateDesigner}>\r\n        <CreateDesigner handleClose={handleCloseCreateDesigner} createDesigner={createDesigner} />\r\n      </Collapse>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { loadWebsitesByManager } from '../../../../routes';\r\nimport { GlobalContext } from '../../../../context/GlobalContext';\r\nimport { RUNTIME_ERROR } from '../../../../constants';\r\nimport { WebsiteContext } from '../../context/WebsiteContext';\r\nimport CreateWebsiteDialog from './create';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Add as AddIcon } from '@material-ui/icons';\r\n\r\nconst WebsiteItem = ({ website }) => {\r\n\r\n  const { websiteController } = useContext(WebsiteContext);\r\n  const [currentWebsite, setCurrentWebsite] = websiteController;\r\n\r\n  const handleCurrentWebsite = () => {\r\n    setCurrentWebsite(website);\r\n  }\r\n\r\n  return (\r\n    <ListItem \r\n      button \r\n      onClick={handleCurrentWebsite}\r\n      selected={website.id === currentWebsite.id}\r\n    >\r\n      <ListItemText \r\n        primary={website.name}\r\n        secondary={website.url}\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nconst CreateWebsite = () => {\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem button onClick={handleClickOpen}>\r\n        <ListItemText \r\n          primary=\"Add new website\"\r\n          secondary=\"Click here to add a new website\"\r\n        />\r\n        <ListItemSecondaryAction>\r\n          <IconButton edge=\"end\" onClick={handleClickOpen}>\r\n            <AddIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      {open && <CreateWebsiteDialog handleClose={handleClose} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function WebsiteList() {\r\n\r\n  const [websites, setWebsites] = useState([]);\r\n  const { websiteController } = useContext(WebsiteContext);\r\n  const [ currentWebsite ] = websiteController;\r\n\r\n  const { managerController } = useContext(GlobalContext);\r\n  const [ manager ] = managerController;\r\n\r\n  useEffect(() => {\r\n    loadWebsitesByManager({\r\n      manager_id: Number(manager.id)\r\n    }).then(data => {\r\n\r\n      setWebsites(data);\r\n    }).catch(error => {\r\n\r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n      } else {\r\n        alert('Error on load Websites');\r\n      }\r\n\r\n    })\r\n  }, [currentWebsite, manager])\r\n\r\n  return (\r\n    <List component=\"div\" style={{ height:'100%' }} >\r\n      <CreateWebsite />\r\n      {websites.map(website => (\r\n        <WebsiteItem key={website.id} website={website} button />\r\n      ))}\r\n    </List>\r\n  );\r\n}","import React, { useState, createContext } from 'react';\r\n\r\nexport const TaskContext = createContext();\r\n\r\nexport default function TaskProvider({ children }) {\r\n  \r\n  const taskController = useState({});\r\n  const pagesController = useState([]);\r\n  const newPageAddController = useState(false);\r\n  const newTaskAddController = useState(false);\r\n\r\n  const value = {\r\n    taskController,\r\n    pagesController,\r\n    newPageAddController,\r\n    newTaskAddController\r\n  }\r\n\r\n  return (\r\n    <TaskContext.Provider value={value}>\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { WebsiteContext } from '../../context/WebsiteContext';\r\nimport { TaskContext } from '../../context/TaskContext';\r\nimport api from '../../../../services/api';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CreatePage({ open, handleClose }) {\r\n  const { websiteController } = useContext(WebsiteContext);\r\n  const [ currentWebsite ] = websiteController;\r\n\r\n  const { newPageAddController } = useContext(TaskContext);\r\n  const [ newPageAdd, setNewPageAdd ] = newPageAddController;\r\n\r\n  const [name, setName] = useState('');\r\n  const [url, setUrl] = useState('/');\r\n  const [selectedElements, setSelectedElements] = useState([]);\r\n  const [elements, setElements] = useState([]);\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const loadElements = async () => {\r\n    const response = await api.post('/elements/index.php');\r\n    const { data } = response;\r\n    if(data.status === 'success') {\r\n      setElements(data.docs);\r\n    } else {\r\n      alert('Error on load elements');\r\n    }\r\n  }\r\n\r\n  const storePage = async () => {\r\n    const response = await api.post('/pages/store.php', {\r\n      name, url,\r\n      website_id: Number(currentWebsite.id),\r\n      elements_id: selectedElements.map(element => Number(element.id))\r\n    });\r\n    const { data } = response;\r\n    if(data.status === 'success') {\r\n      if(!newPageAdd) {\r\n        setNewPageAdd(true);\r\n      }\r\n    } else {\r\n      alert('Error on create page');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadElements();\r\n  }, [])\r\n\r\n  const handleChageName = event => {\r\n    const { value } = event.target;\r\n    value.length <= 100 && setName(value);\r\n  }\r\n\r\n  const handleChageUrl = event => {\r\n    const { value } = event.target;\r\n    value.length <= 150 && setUrl(value);\r\n  }\r\n\r\n  const handleSelectetElement = element => {\r\n    if(!element) return;\r\n    setSelectedElements([...selectedElements, element]);\r\n  }\r\n\r\n  const handleRemoveElement = index => {\r\n    setSelectedElements(selectedElements.filter((element, i) => index !== i ));\r\n  }\r\n\r\n  const validName = name => name.length >= 3 ? true : false;\r\n  const validEments = elements => elements.length <= 5 ? true : false;\r\n\r\n  const withoutErrors = () => {\r\n    const errors = [];\r\n    if(!validName(name)) {\r\n      errors.push('Please enter a name with at least 3 characters')\r\n    }\r\n    if(!validEments(selectedElements)) {\r\n      errors.push('Select up to 5 elements');\r\n    }\r\n    setErrors(errors);\r\n    return errors.length === 0;\r\n  }\r\n\r\n  const submit = () => {\r\n    if(withoutErrors()) {\r\n      storePage();\r\n      handleClose();\r\n      setName('');\r\n      setUrl('');\r\n      setSelectedElements([]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} fullWidth>\r\n      <DialogTitle onClose={handleClose}>\r\n        Add Page\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Collapse in={errors.length > 0}>\r\n          <Alert \r\n            variant=\"filled\"\r\n            severity=\"error\"\r\n          >\r\n            {errors.join(', ')}\r\n          </Alert>\r\n        </Collapse>\r\n        <Typography style={{ marginTop: 10 }} gutterBottom> Page Name </Typography>\r\n        <TextField \r\n          id=\"name\" \r\n          label=\"ex: home page\" \r\n          variant=\"outlined\"\r\n          value={name}\r\n          fullWidth\r\n          onChange={handleChageName}\r\n        />\r\n        <Typography style={{ marginTop: 10 }} gutterBottom> \r\n          Page address {url[0] === '/' && `\"${currentWebsite.url}${url}\"`} \r\n        </Typography>\r\n        <TextField \r\n          id=\"url\" \r\n          label=\"ex: /home\" \r\n          variant=\"outlined\"\r\n          type=\"url\"\r\n          value={url}\r\n          fullWidth\r\n          onChange={handleChageUrl}\r\n        />\r\n        <Typography style={{ marginTop: 10 }} gutterBottom> \r\n          Interaction Elements\r\n        </Typography>\r\n        <Autocomplete\r\n          autoHighlight\r\n          clearOnEscape\r\n          options={elements}\r\n          getOptionLabel={element => element.name}\r\n          onChange={(event, newValue) => handleSelectetElement(newValue)}\r\n          style={{ width: '100%' }}\r\n          renderInput={(params) => <TextField {...params} label=\"Element name\" variant=\"outlined\" />}\r\n        />\r\n        {selectedElements.map((element, index) => (\r\n          <Chip\r\n            key={index}\r\n            color=\"primary\"\r\n            style={{ marginTop: 10, marginRight: 5 }}\r\n            label={element.name}\r\n            onDelete={() => handleRemoveElement(index)}\r\n          />\r\n        ))}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button \r\n          autoFocus \r\n          color=\"primary\"\r\n          onClick={submit}\r\n        >\r\n          Add Page\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { TaskContext } from '../../context/TaskContext';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CreateTask({ open, handleClose }) {\r\n  const { taskController } = useContext(TaskContext);\r\n  const [ currentTask, setCurrentTask ] = taskController;\r\n\r\n  const [name, setName] = useState('');\r\n  const [detail, setDetail] = useState('');\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const preCreateTask = () => {\r\n    setCurrentTask({\r\n      name, detail\r\n    })\r\n  }\r\n\r\n  const handleChageName = event => {\r\n    const { value } = event.target;\r\n    value.length <= 100 && setName(value);\r\n  }\r\n\r\n  const handleChangeDetail = event => {\r\n    const { value } = event.target;\r\n    value.length <= 300 && setDetail(value);\r\n  }\r\n\r\n  const validName = name => name.length >= 3 ? true : false;\r\n\r\n  const withoutErrors = () => {\r\n    const errors = [];\r\n    if(!validName(name)) {\r\n      errors.push('Please enter a name with at least 3 characters')\r\n    }\r\n    setErrors(errors);\r\n    return errors.length === 0;\r\n  }\r\n\r\n  const submit = () => {\r\n    if(withoutErrors()) {\r\n      preCreateTask();\r\n      handleClose();\r\n      setName('');\r\n      setDetail('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} fullWidth>\r\n      <DialogTitle onClose={handleClose}>\r\n        Create Task\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Alert\r\n          variant=\"filled\"\r\n          severity=\"info\"\r\n          style={{ marginBottom: 10 }}\r\n        >\r\n          This task will only be saved when at least one page is added, and clicking the \"Save Task\" button\r\n        </Alert>\r\n        {(!currentTask.id && currentTask.name) && (\r\n          <Alert\r\n            variant=\"filled\"\r\n            severity=\"warning\"\r\n            style={{ marginBottom: 10 }}\r\n          >\r\n            The task \"{currentTask.name}\" has not yet been saved\r\n          </Alert>\r\n        )}\r\n        <Collapse in={errors.length > 0}>\r\n          <Alert \r\n            variant=\"filled\"\r\n            severity=\"error\"\r\n          >\r\n            {errors.join(', ')}\r\n          </Alert>\r\n        </Collapse>\r\n        <Typography style={{ marginTop: 10 }} gutterBottom> Task Name </Typography>\r\n        <TextField \r\n          id=\"name\" \r\n          label=\"ex: Buy bread\" \r\n          variant=\"outlined\"\r\n          value={name}\r\n          fullWidth\r\n          onChange={handleChageName}\r\n        />\r\n        <Typography style={{ marginTop: 10 }} gutterBottom> Task Detail </Typography>\r\n        <TextField \r\n          id=\"detail\" \r\n          label=\"Details\" \r\n          variant=\"outlined\"\r\n          multiline\r\n          value={detail}\r\n          fullWidth\r\n          onChange={handleChangeDetail}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button \r\n          autoFocus \r\n          color=\"primary\"\r\n          onClick={submit}\r\n        >\r\n          Create Task\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport api from '../../../../services/api';\r\nimport SelectWebsiteSvg from '../../../../assets/select_website.svg';\r\nimport CreateWebsiteDialog from '../WebsiteList/create';\r\nimport CreatePageDialog from './createPage';\r\nimport CreateTaskDialog from './createTask';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport MoreVert from '@material-ui/icons/MoreVert'\r\nimport Delete from '@material-ui/icons/Delete'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { WebsiteContext } from '../../context/WebsiteContext';\r\nimport { TaskContext } from '../../context/TaskContext';\r\nimport TaskProvider from '../../context/TaskContext';\r\n\r\nimport { loadTasksByWebsite } from '../../../../routes';\r\nimport { RUNTIME_ERROR } from '../../../../constants';\r\n\r\nconst TaskAdd = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Paper style={{ background: '#9f9' }}>\r\n      <ListItem button onClick={handleClickOpen}>\r\n        <ListItemText \r\n          primary=\"Add new task\"\r\n          secondary=\"Click here to add a new task\"\r\n        />\r\n        <ListItemSecondaryAction onClick={handleClickOpen}>\r\n          <IconButton edge=\"end\">\r\n            <AddIcon fontSize=\"large\" style={{ color: 'green' }} />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      <CreateTaskDialog open={open} handleClose={handleClose} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst TaskItemAvailble = ({ task }) => {\r\n  const { taskController } = useContext(TaskContext);\r\n  const [currentTask, setCurrentTask] = taskController;\r\n\r\n  return (\r\n    <Paper style={{ marginTop: 10, background: 'linear-gradient(45deg, #2196F3 90%, #21CBF3 30%)' }}>\r\n      <ListItem button selected={currentTask === task} onClick={() => setCurrentTask(task)}>\r\n        <Tooltip title=\"Add task in the constructor\" arrow placement=\"top\">\r\n          <ListItemText \r\n            primary={<Typography style={{ color: '#FFF' }}>{task.name}</Typography>}\r\n            secondary={<Typography variant=\"subtitle2\" style={{ color: '#EEE' }}>{task.detail}</Typography>}\r\n          />\r\n        </Tooltip>\r\n      </ListItem>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst TaskItemUnavailable = ({ task }) => {\r\n  return (\r\n    <Paper style={{ marginTop: 10, background: '#ddd' }}>\r\n      <ListItem disabled onClick={() => alert(task.id)}>\r\n        <Tooltip title=\"This task is used by some assessment\" arrow placement=\"top\">\r\n          <ListItemText \r\n            primary={task.name}\r\n            secondary={task.detail}\r\n          />\r\n        </Tooltip>\r\n      </ListItem>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst TaskList = ({ website }) => {\r\n  const { newTaskAddController } = useContext(TaskContext);\r\n  const [ newTaskAdd, setNewTaskAdd ] = newTaskAddController;\r\n\r\n  const [availableTasks, setAvailableTasks] = useState([]);\r\n  const [unavailableTasks, setUnvailableTasks] = useState([]);\r\n\r\n  const loadTasks = useCallback(() => {\r\n    loadTasksByWebsite({\r\n      website_id: Number(website.id)\r\n    }).then(data => {\r\n\r\n      setAvailableTasks(data.available);\r\n      setUnvailableTasks(data.unavailable);\r\n    }).catch(error => {\r\n      console.log(error);\r\n      if(Number(error.id) !== RUNTIME_ERROR) {\r\n        alert(error.detail);\r\n      } else {\r\n        alert('Error on load Tasks');\r\n      }\r\n\r\n    })\r\n  }, [website])\r\n\r\n  useEffect(() => {\r\n    loadTasks();\r\n  }, [loadTasks])\r\n\r\n  useEffect(() => {\r\n    if(newTaskAdd) {\r\n      loadTasks();\r\n      setNewTaskAdd(false);\r\n    }\r\n  }, [newTaskAdd, loadTasks, setNewTaskAdd]);\r\n\r\n  return (\r\n    <List component=\"div\">\r\n      <Typography variant=\"body1\" align=\"center\" style={{ color: '#777' }}>\r\n        TASK LIST\r\n      </Typography>\r\n      <Divider />\r\n      <TaskAdd />\r\n      {availableTasks.map(task => (\r\n        <TaskItemAvailble key={task.id} task={task} />\r\n      ))}\r\n      {unavailableTasks.length > 0 && (\r\n        <div>\r\n          <Divider />\r\n          <Typography>Read-Only Region</Typography>\r\n          {unavailableTasks.map(task => (\r\n            <TaskItemUnavailable key={task.id} task={task} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </List>\r\n  )\r\n}\r\n\r\nconst PageAdd = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Paper style={{ background: '#9f9' }}>\r\n      <ListItem button onClick={handleClickOpen}>\r\n        <ListItemText \r\n          primary=\"Add new page\"\r\n          secondary=\"Click here to add a new page\"\r\n        />\r\n        <ListItemSecondaryAction onClick={handleClickOpen}>\r\n          <IconButton edge=\"end\">\r\n            <AddIcon fontSize=\"large\" style={{ color: 'green' }} />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      <CreatePageDialog open={open} handleClose={handleClose} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst PageItem = ({ page }) => {\r\n  const { pagesController } = useContext(TaskContext);\r\n  const [selectedsPages, setSelectedsPages] = pagesController;\r\n\r\n  const handleAddPage = () => {\r\n    setSelectedsPages([...selectedsPages, page])\r\n  }\r\n\r\n  return (\r\n    <Paper style={{ marginTop: 10, background: 'linear-gradient(45deg, #21CBF3 90%, #2196F3 30%)' }}>\r\n      <ListItem button onClick={handleAddPage}>\r\n        <Tooltip title=\"Add page in the constructor\" arrow placement=\"top\">\r\n          <ListItemText \r\n            primary={<Typography style={{ color: '#fff' }}>{page.name}</Typography>}\r\n            secondary={<Typography style={{ color: '#fff' }}>{page.url}</Typography>}\r\n          />\r\n        </Tooltip>\r\n      </ListItem>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst PageList = ({ website }) => {\r\n  const { newPageAddController } = useContext(TaskContext);\r\n  const [ newPageAdd, setNewPageAdd ] = newPageAddController;\r\n\r\n  const [pages, setPages] = useState([]);\r\n\r\n  const loadPages = async (id) => {\r\n    const response = await api.post('/websites/pages.php', { id: Number(id) });\r\n    const { data } = response;\r\n    if(data.status === 'success') {\r\n      setPages(data.docs);\r\n    } else {\r\n      alert('Error on load pages');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(website.id) {\r\n      loadPages(website.id);\r\n    }\r\n  }, [website])\r\n\r\n  useEffect(() => {\r\n    if(newPageAdd && website.id) {\r\n      loadPages(website.id);\r\n      setNewPageAdd(false);\r\n    }\r\n  }, [newPageAdd, website, setNewPageAdd])\r\n\r\n  return (\r\n    <List component=\"div\" style={{ padding: 10, height: 635, overflowY: 'auto'}}>\r\n      <Typography variant=\"body1\" align=\"center\" style={{ color: '#777' }}>\r\n        PAGE LIST\r\n      </Typography>\r\n      <Divider />\r\n      <PageAdd />\r\n      {pages.map(page => (\r\n        <PageItem key={page.id} page={page} />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nconst TaskHeader = ({ task }) => {\r\n  return (\r\n    <Paper style={{ background: '#9f9' }}>\r\n      <ListItem button onClick={() => {}}>\r\n        <ListItemText \r\n          primary={task.name}\r\n          secondary=\"The sequence of pages below represents the route of this task\"\r\n        />\r\n        <ListItemSecondaryAction onClick={() => alert('edit task')}>\r\n          <IconButton edge=\"end\">\r\n            <MoreVert style={{ color: 'grey' }} />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst RouteItem = ({ page, index }) => {\r\n  const { pagesController } = useContext(TaskContext);\r\n  const [ selectedsPages, setSelectedsPages ] = pagesController;\r\n\r\n  const handleRemove = () => {\r\n    const filteredPages = selectedsPages.filter((selectedPage, i) => index !== i);\r\n    setSelectedsPages(filteredPages);\r\n  }\r\n\r\n  return (\r\n    <Paper style={{ marginTop: 10, background: 'linear-gradient(45deg, #21CBF3 90%, #99FF99 30%)' }}>\r\n      <ListItem button>\r\n        <ListItemText \r\n          primary={<Typography style={{ color: 'white' }}>{page.name}</Typography>}\r\n          secondary={<Typography style={{ color: 'white' }}>{page.url}</Typography>}\r\n        />\r\n        <Tooltip title=\"Click to remove this page from task\" arrow placement=\"top\">\r\n          <ListItemSecondaryAction onClick={handleRemove}>\r\n            <IconButton edge=\"end\">\r\n              <Delete style={{ color: '#FFF' }} />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </Tooltip>\r\n      </ListItem>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst Constructor = () => {\r\n  const { websiteController } = useContext(WebsiteContext);\r\n  const [ currentWebsite ] = websiteController;\r\n\r\n  const { pagesController, taskController, newTaskAddController } = useContext(TaskContext);\r\n  const [ selectedsPages, setSelectedsPages ] = pagesController;\r\n  const [ newTaskAdd, setNewTaskAdd ] = newTaskAddController;\r\n  const [ currentTask, setCurrentTask ] = taskController;\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  }\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  }\r\n\r\n  const storeTask = async (task) => {\r\n    const response = await api.post('/tasks/store.php', task);\r\n    const { data } = response;\r\n    if(data.status === 'success') {\r\n      if(!newTaskAdd) {\r\n        setNewTaskAdd(true);\r\n        setCurrentTask({...currentTask, id: Number(data.docs.id) })\r\n      }\r\n    } else {\r\n      alert('Error on create task');\r\n    }\r\n  }\r\n\r\n  const syncNewPages = async (pages) => {\r\n    const response = await api.post('/tasks/sync.php', { id: Number(currentTask.id), pages });\r\n    const { data } = response;\r\n    if(data.status === 'success') {\r\n      alert('Successfully saved!');\r\n    } else {\r\n      alert('Error on save task');\r\n    }\r\n  }\r\n\r\n  const handleSaveTask = () => {\r\n    syncNewPages(selectedsPages.map(page => Number(page.id)));\r\n  }\r\n\r\n  const handleCreateTask = () => {\r\n    if(selectedsPages.length > 0) {\r\n      storeTask({\r\n        name: currentTask.name,\r\n        detail: currentTask.detail,\r\n        pages: selectedsPages.map(page => Number(page.id))\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(selectedsPages.length > 0) {\r\n      setSelectedsPages([]);\r\n    }\r\n    if(currentTask.name) {\r\n      setCurrentTask({});\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentWebsite]);\r\n\r\n  useEffect(() => {\r\n    if(currentTask.id) {\r\n      const loadPagesRoute = async (id) => {\r\n        const response = await api.post('/tasks/pages.php', { id: Number(id) });\r\n        const { data } = response;\r\n        if(data.status === 'success') {\r\n          setSelectedsPages(data.docs)\r\n        } else {\r\n          alert('Error on load pages task');\r\n        }\r\n      }\r\n      loadPagesRoute(currentTask.id);\r\n    } else {\r\n      setSelectedsPages([])\r\n    }\r\n  }, [setSelectedsPages, currentTask]);\r\n\r\n  return (\r\n    <List component=\"div\" style={{ padding: 10, height: 635, overflowY: 'auto' }}>\r\n      <Typography variant=\"body1\" align=\"center\" style={{ color: '#777' }}>\r\n        CONSTRUCTOR\r\n      </Typography>\r\n      <Divider />\r\n      {currentTask.name ? (\r\n        <div>\r\n          <TaskHeader task={currentTask} />\r\n          {selectedsPages.map((page, index) => (\r\n            <RouteItem key={index} page={page} index={index} />\r\n          ))}\r\n          {currentTask.id ? (\r\n            <Button \r\n              fullWidth\r\n              onClick={handleSaveTask}\r\n              disabled={selectedsPages.length === 0}\r\n              style={{ \r\n                marginTop: 10, \r\n                background: selectedsPages.length === 0 ? '#DDD' :'linear-gradient(45deg, #77EE77 30%, #99EE99 90%)', \r\n                color: selectedsPages.length === 0 ? '#000' : '#333' \r\n              }}\r\n            >\r\n              Save Task\r\n            </Button>\r\n          ) : (\r\n            <Button \r\n              fullWidth\r\n              onClick={handleCreateTask}\r\n              disabled={selectedsPages.length === 0}\r\n              style={{ \r\n                marginTop: 10, \r\n                background: selectedsPages.length === 0 ? '#DDD' :'linear-gradient(45deg, #77EE77 30%, #99EE99 90%)', \r\n                color: selectedsPages.length === 0 ? '#000' : '#333'\r\n              }}\r\n            >\r\n              Create Task\r\n            </Button>\r\n          )}\r\n          {selectedsPages.length === 0 && (\r\n            <div>\r\n              <Divider />\r\n              <Typography align=\"center\" style={{ color: '#999' }}>\r\n                Select any page on the middle to save this task\r\n              </Typography>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Typography align=\"center\" style={{ color: '#999' }}>\r\n            Select any task on the left to edit your route\r\n          </Typography>\r\n          <Typography \r\n            variant=\"subtitle2\" \r\n            align=\"center\" \r\n            onClick={handleOpenDialog} \r\n            style={{ color: '#88f', cursor: 'pointer' }}\r\n          >\r\n            Click here to create a new task\r\n          </Typography>\r\n          <CreateTaskDialog open={openDialog} handleClose={handleCloseDialog} />\r\n        </div>\r\n      )}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default function RightPanel() {\r\n  const useStyles = makeStyles(theme => ({\r\n    container: {\r\n      height: '100%',\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-around',\r\n      alignItems: 'center'\r\n    },\r\n    title: {\r\n      color: '#444'\r\n    },\r\n    svg: {\r\n      maxHeight: '350px'\r\n    },\r\n    link: {\r\n      color: theme.palette.primary.main,\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        textDecoration: 'underline'\r\n      }\r\n    },\r\n    gridContainer: {\r\n      height: '100%'\r\n    },\r\n    gridItem: {\r\n      height: '100%',\r\n    },\r\n    paper: {\r\n      height: 'calc(100vh - 70px)',\r\n      overflowY: 'auto',\r\n      borderRight: '1px solid lightgrey',\r\n      borderBottom: '4px solid transparent',\r\n      padding: theme.spacing(1),\r\n    }\r\n  }));\r\n\r\n  const { websiteController } = useContext(WebsiteContext);\r\n  const [ website ] = websiteController;\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const handleClickOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return website.id ? (\r\n    <TaskProvider>\r\n      <Grid className={classes.gridContainer} container>\r\n        <Grid className={classes.gridItem} sm item>\r\n          <div className={classes.paper} style={{ borderBottomColor: 'blueviolet' }}>\r\n            <TaskList website={website} />\r\n          </div>\r\n        </Grid>\r\n        <Grid className={classes.gridItem} sm item>\r\n          <div className={classes.paper} style={{ borderBottomColor: 'blue' }}>\r\n            <PageList website={website} />\r\n          </div>\r\n        </Grid>\r\n        <Grid className={classes.gridItem} sm item>\r\n          <div className={classes.paper} style={{ borderBottomColor: 'yellow' }}>\r\n            <Constructor />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </TaskProvider>    \r\n  ) : (\r\n    <div className={classes.container}>\r\n      <Typography \r\n        className={classes.title}\r\n        variant=\"h4\"\r\n      >\r\n        Select a website on the Left\r\n      </Typography>\r\n      <img \r\n        className={classes.svg}\r\n        src={SelectWebsiteSvg} \r\n        alt=\"Select some website\" \r\n      /> \r\n      <Typography \r\n        className={classes.link}\r\n        variant=\"subtitle1\"\r\n        onClick={handleClickOpenDialog}\r\n      >\r\n        Or Click here to add a New Website\r\n      </Typography>\r\n      {openDialog && <CreateWebsiteDialog handleClose={handleCloseDialog} />}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport WebsiteProvider from './context/WebsiteContext';\r\nimport WebsiteList from './components/WebsiteList';\r\nimport RightPanel from './components/RightPanel';\r\n\r\nexport default function PanelWebsites({ classes }) {\r\n  return (\r\n    <WebsiteProvider>\r\n      <div className={classes.list}>\r\n        <WebsiteList />\r\n      </div>\r\n      <div className={classes.content}>\r\n        <RightPanel />\r\n      </div>\r\n    </WebsiteProvider>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function Header({ setPage }) {\r\n\tconst useStyles = makeStyles(theme => ({\r\n\t\troot: {\r\n\t\t\tgridArea: 'HE',\r\n\t\t\tflexGrow: 1,\r\n\t\t},\r\n\t\tmenuButton: {\r\n\t\t\tmarginRight: theme.spacing(2),\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tflexGrow: 1,\r\n\t\t},\r\n\t\tAppBar: {\r\n\t\t\tbackground: theme.palette.primary,\r\n\t\t\theight: '100%',\r\n\t\t\tdisplay:'flex',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t}\r\n\t}));\r\n\r\n\tconst { managerController } = useContext(GlobalContext);\r\n\tconst [ manager, setManager ] = managerController;\r\n\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleClickOpenMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n\t};\r\n\t\r\n\tconst handleClickLogout = () => {\r\n\r\n\t\tlocalStorage.removeItem('manager_data');\r\n\r\n\t\tsetManager({});\r\n\r\n\t\thandleCloseMenu();\r\n\t}\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar position=\"static\" className={classes.AppBar}>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\tCo-Inspect Tool\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Button color=\"inherit\" onClick={() => setPage('WebsitesPage')}>Websites</Button>\r\n\t\t\t\t\t<Button color=\"inherit\" onClick={() => setPage('QuestionnairePage')}>Questionnaires</Button>\r\n\t\t\t\t\t<Button color=\"inherit\" onClick={() => setPage('EvaluationManagerPage')}>Evaluations</Button>\r\n\t\t\t\t\t<Button color=\"inherit\" onClick={handleClickOpenMenu}>\r\n\t\t\t\t\t\t<Typography noWrap style={{ maxWidth: '24ch' }}>\r\n\t\t\t\t\t\t\t{manager.name}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Menu\r\n\t\t\t\t\t\tkeepMounted\r\n\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\topen={Boolean(anchorEl)}\r\n\t\t\t\t\t\tonClose={handleCloseMenu}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuItem onClick={() => { alert('WIP'); handleCloseMenu(); }}>Profile</MenuItem>\r\n\t\t\t\t\t\t<MenuItem onClick={() => { alert('WIP'); handleCloseMenu(); }}>My account</MenuItem>\r\n\t\t\t\t\t\t<MenuItem onClick={handleClickLogout}>Logout</MenuItem>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\t\t\r\n","import React, { useContext, useState } from 'react';\r\nimport LoginPage from './LoginPage';\r\nimport QuestionnairePage from './QuestionnairePage';\r\nimport EvaluationManagerPage from './EvaluationManagerPage';\r\nimport WebsitesPage from './WebsitesPage';\r\n\r\nimport Header from '../components/layouts/Header';\r\n\r\nimport { GlobalContext } from '../context/GlobalContext';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    height: '100%',\r\n  \r\n    display: 'grid',\r\n    gridTemplateColumns: '300px auto',\r\n    gridTemplateRows: '70px auto',\r\n    gridTemplateAreas: `\r\n      'HE HE'\r\n      'LI CO' \r\n    `\r\n  },\r\n  list: {\r\n    gridArea: 'LI',\r\n    overflowY: 'auto',\r\n    borderRight: '1px solid lightgrey',\r\n    height: 'calc(100vh - 70px)'\r\n  },\r\n  content: {\r\n    gridArea: 'CO',\r\n    height: 'calc(100vh - 70px)'\r\n  }\r\n}))\r\n\r\nexport default function Pages() {\r\n  const { managerController } = useContext(GlobalContext);\r\n  const [ manager ] = managerController;\r\n\r\n  const [page, setPage] = useState('EvaluationManagerPage');\r\n\r\n  const classes = useStyles();\r\n\r\n  const showPage = (pageName) => {\r\n    switch (pageName) {\r\n      case 'QuestionnairePage': \r\n        return <QuestionnairePage classes={classes} />\r\n      case 'EvaluationManagerPage':\r\n        return <EvaluationManagerPage classes={classes} />\r\n      case 'WebsitesPage': \r\n        return <WebsitesPage classes={classes} />\r\n      default: \r\n        return <div>404 page not found</div>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {manager.id ? (\r\n        <div className={classes.container}>\r\n          <Header setPage={setPage} />\r\n          {showPage(page)}\r\n        </div>          \r\n      ) : (\r\n        <LoginPage />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Pages from './pages';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport GlobalContext from './context/GlobalContext';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\r\nimport { indigo } from '@material-ui/core/colors';\r\n\r\nimport './styles/GlobalStyles.css'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#22ACF0',\r\n      contrastText: '#FFFFFF'\r\n    },\r\n    secondary: indigo,\r\n    link: {\r\n      blue: '#88F'\r\n    },\r\n    save: {\r\n      main: '#99EE99',\r\n      contrastText: '#333333'\r\n    },\r\n    duplicate: {\r\n      main: '#EDED66',\r\n      contrastText: '#333333'\r\n    },\r\n    remove: {\r\n      main: '#EE6666',\r\n      contrastText: '#333333'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Roboto',\r\n    ]\r\n  }\r\n});\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <GlobalContext>\r\n        <CssBaseline />\r\n\r\n        <Pages />\r\n\r\n      </GlobalContext>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/select_website.e95c4387.svg\";"],"sourceRoot":""}